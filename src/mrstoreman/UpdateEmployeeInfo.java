/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahdi
 */
public class UpdateEmployeeInfo extends javax.swing.JFrame {

    /**
     * Creates new form UpdateEmployeeInfo
     */
    public UpdateEmployeeInfo() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        UEIName = new javax.swing.JTextField();
        UEIContact = new javax.swing.JTextField();
        UEIEmail = new javax.swing.JTextField();
        UEIJD = new javax.swing.JTextField();
        UEISalary = new javax.swing.JTextField();
        UEIPassword = new javax.swing.JTextField();
        UEILocation = new javax.swing.JTextField();
        jButtonUpdateFromEmployeeTable = new javax.swing.JButton();
        jButtonBFUEI = new javax.swing.JButton();
        jLabelUEIMin = new javax.swing.JLabel();
        jLabelUEIClose = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        UEIID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        UEIDetails = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jButtonFetchinUEI = new javax.swing.JButton();
        jButtonSearchUEI = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Contact:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Joining Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Salary:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Password:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Location:");

        UEIName.setBackground(new java.awt.Color(234, 67, 73));
        UEIName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIName.setForeground(new java.awt.Color(240, 240, 240));
        UEIName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEINameActionPerformed(evt);
            }
        });

        UEIContact.setBackground(new java.awt.Color(234, 67, 73));
        UEIContact.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIContact.setForeground(new java.awt.Color(240, 240, 240));
        UEIContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEIContactActionPerformed(evt);
            }
        });

        UEIEmail.setBackground(new java.awt.Color(234, 67, 73));
        UEIEmail.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIEmail.setForeground(new java.awt.Color(240, 240, 240));
        UEIEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEIEmailActionPerformed(evt);
            }
        });

        UEIJD.setBackground(new java.awt.Color(234, 67, 73));
        UEIJD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIJD.setForeground(new java.awt.Color(240, 240, 240));
        UEIJD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEIJDActionPerformed(evt);
            }
        });

        UEISalary.setBackground(new java.awt.Color(234, 67, 73));
        UEISalary.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEISalary.setForeground(new java.awt.Color(240, 240, 240));
        UEISalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEISalaryActionPerformed(evt);
            }
        });

        UEIPassword.setBackground(new java.awt.Color(234, 67, 73));
        UEIPassword.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIPassword.setForeground(new java.awt.Color(240, 240, 240));

        UEILocation.setBackground(new java.awt.Color(234, 67, 73));
        UEILocation.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEILocation.setForeground(new java.awt.Color(240, 240, 240));
        UEILocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEILocationActionPerformed(evt);
            }
        });

        jButtonUpdateFromEmployeeTable.setBackground(new java.awt.Color(234, 67, 73));
        jButtonUpdateFromEmployeeTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonUpdateFromEmployeeTable.setForeground(new java.awt.Color(240, 240, 240));
        jButtonUpdateFromEmployeeTable.setText("Update");
        jButtonUpdateFromEmployeeTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateFromEmployeeTableActionPerformed(evt);
            }
        });

        jButtonBFUEI.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFUEI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFUEI.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFUEI.setText("<-");
        jButtonBFUEI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFUEI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFUEIMouseClicked(evt);
            }
        });

        jLabelUEIMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelUEIMin.setForeground(new java.awt.Color(240, 240, 240));
        jLabelUEIMin.setText("-");
        jLabelUEIMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelUEIMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelUEIMinMouseClicked(evt);
            }
        });

        jLabelUEIClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelUEIClose.setForeground(new java.awt.Color(240, 240, 240));
        jLabelUEIClose.setText("X");
        jLabelUEIClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelUEIClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelUEICloseMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("ID:");

        UEIID.setBackground(new java.awt.Color(234, 67, 73));
        UEIID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        UEIID.setForeground(new java.awt.Color(240, 240, 240));
        UEIID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UEIIDActionPerformed(evt);
            }
        });

        UEIDetails.setBackground(new java.awt.Color(243, 67, 73));
        UEIDetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UEIDetails.setForeground(new java.awt.Color(240, 240, 240));
        UEIDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Email", "Joining Date", "Salary", "Password", "Location"
            }
        ));
        UEIDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UEIDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(UEIDetails);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Update Employee Information");

        jButtonFetchinUEI.setBackground(new java.awt.Color(243, 67, 73));
        jButtonFetchinUEI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonFetchinUEI.setForeground(new java.awt.Color(240, 240, 240));
        jButtonFetchinUEI.setText("Fetch");
        jButtonFetchinUEI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFetchinUEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchinUEIActionPerformed(evt);
            }
        });

        jButtonSearchUEI.setBackground(new java.awt.Color(243, 67, 73));
        jButtonSearchUEI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSearchUEI.setForeground(new java.awt.Color(240, 240, 240));
        jButtonSearchUEI.setText("Search");
        jButtonSearchUEI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSearchUEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchUEIActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(234, 67, 73));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(240, 240, 240));
        jButtonClear.setText("Clear");
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UEIContact, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UEIEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UEIPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UEILocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(UEIName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(UEIID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UEISalary, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSearchUEI))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonBFUEI)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(UEIJD, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonUpdateFromEmployeeTable)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFetchinUEI, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelUEIMin)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelUEIClose)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonBFUEI)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelUEIMin)
                        .addComponent(jLabelUEIClose)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEIID)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEIContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEIEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(UEIJD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(UEISalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEIPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UEILocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSearchUEI)
                            .addComponent(jButtonClear)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFetchinUEI)
                    .addComponent(jButtonUpdateFromEmployeeTable))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UEIContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEIContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEIContactActionPerformed

    private void UEIEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEIEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEIEmailActionPerformed

    private void UEISalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEISalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEISalaryActionPerformed

    private void jButtonUpdateFromEmployeeTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateFromEmployeeTableActionPerformed
            int row = UEIDetails.getSelectedRow();
            String cell = UEIDetails.getModel().getValueAt(row,0).toString();
            String name = UEIDetails.getModel().getValueAt(row,1).toString();
            String contact = UEIDetails.getModel().getValueAt(row,2).toString();
            String email = UEIDetails.getModel().getValueAt(row,3).toString();
            String jd = UEIDetails.getModel().getValueAt(row,4).toString();
            String salary = UEIDetails.getModel().getValueAt(row,5).toString();
            String password = UEIDetails.getModel().getValueAt(row,6).toString();
            String location = UEIDetails.getModel().getValueAt(row,7).toString();
            System.out.println("id = "+cell);
            System.out.println("name = "+name);
            System.out.println("contact = "+contact);
            System.out.println("email = "+email);
            System.out.println("jd = "+jd);
            System.out.println("salary = "+salary);
            System.out.println("password = "+password);
            System.out.println("location = "+location);
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            //Statement stLogin = connectionLogin.createStatement();
            //String sqlLogin = "select * from Owner where OwnerEmail = ? and OwnerPassword = ?";
            //PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
            String sqlInsert = "update Employee set EmployeeName=?,EmployeeContact=?,EmployeeEmail=?,EmployeeJoiningDate=?,EmployeeSalary=?,EmployeePassword=?,EmployeeLocation=? where EmployeeId=?";
            PreparedStatement pst = con.prepareStatement(sqlInsert);
            
            if(UEIName.getText().length()>0)
            {
                pst.setString(1, UEIName.getText());
            }
            else
            {
                pst.setString(1, name);
            }
            
            if(UEIContact.getText().length()>0)
            {
                pst.setString(2, UEIContact.getText());
            }
            else
            {
                pst.setString(2, contact);
            }
            
            if(UEIEmail.getText().length()>0)
            {
                pst.setString(3, UEIEmail.getText());
            }
            else
            {
                pst.setString(3, email);
            }
            
            if(UEIJD.getText().length()>0)
            {
                pst.setString(4, UEIJD.getText());
            }
            else
            {
                pst.setString(4, jd);
            }
            
            if(UEISalary.getText().length()>0)
            {
                pst.setString(5, UEISalary.getText());
            }
            else
            {
                pst.setString(5, salary);
            }
            
            if(UEIPassword.getText().length()>0)
            {
                pst.setString(6, UEIPassword.getText());
            }
            else
            {
                pst.setString(6, password);
            }
            
            if(UEILocation.getText().length()>0)
            {
                pst.setString(7, UEILocation.getText());
            }
            else
            {
                pst.setString(7, location);
            }
            pst.setString(8, UEIID.getText());

            pst.executeUpdate();
            
            if(UEIID.getText().length()==0)
            {
                JOptionPane.showMessageDialog(this,"Nothing updated");
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Successfully updated");
            }
            //JOptionPane.showMessageDialog(this,"Successfully updated");

            //connectionLogin.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_jButtonUpdateFromEmployeeTableActionPerformed

    private void jButtonBFUEIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFUEIMouseClicked
        EmployeeInfo ei3 = new EmployeeInfo();
        ei3.setVisible(true);
        ei3.pack();
        ei3.setLocationRelativeTo(null);
        ei3.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonBFUEIMouseClicked

    private void jLabelUEIMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelUEIMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelUEIMinMouseClicked

    private void jLabelUEICloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelUEICloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelUEICloseMouseClicked

    private void UEIJDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEIJDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEIJDActionPerformed

    private void UEINameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEINameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEINameActionPerformed

    private void UEILocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEILocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEILocationActionPerformed

    private void UEIIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UEIIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UEIIDActionPerformed

    private void UEIDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UEIDetailsMouseClicked
        int row = UEIDetails.getSelectedRow();
        String selection = UEIDetails.getModel().getValueAt(row,0).toString();
        //String sql = "select * from Employee where EmployeeId = " + selection;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection3 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement st3 = connection3.createStatement();
            String sql3 = "select * from Employee where EmployeeId = " + selection;
            ResultSet rs3 = st3.executeQuery(sql3);
            if(rs3.next()){
                UEIID.setText(rs3.getString("EmployeeId"));
                UEIName.setText(rs3.getString("EmployeeName"));
                UEIContact.setText(rs3.getString("EmployeeContact"));
                UEIEmail.setText(rs3.getString("EmployeeEmail"));
                UEIJD.setText(rs3.getString("EmployeeJoiningDate"));
                UEISalary.setText(rs3.getString("EmployeeSalary"));
                UEIPassword.setText(rs3.getString("EmployeePassword"));
                UEILocation.setText(rs3.getString("EmployeeLocation"));
            }

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_UEIDetailsMouseClicked

    private void jButtonFetchinUEIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFetchinUEIActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection2 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            UEIDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Joining Date","Salary","Password","Location"}));
            Statement st2 = connection2.createStatement();
            String sql2 = "select * from Employee WHERE EmployeeQuittingDate = 'In Contract' ";
            ResultSet rs2 = st2.executeQuery(sql2);
            while(rs2.next()){
                String EmployeeId = String.valueOf(rs2.getInt("EmployeeId"));
                String EmployeeName = rs2.getString("EmployeeName");
                String EmployeeContact = rs2.getString("EmployeeContact");
                String EmployeeEmail = rs2.getString("EmployeeEmail");
                String EmployeeJoiningDate = rs2.getString("EmployeeJoiningDate");
                String EmployeeSalary = rs2.getString("EmployeeSalary");
                String EmployeeQuittingDate = rs2.getString("EmployeeQuittingDate");
                String EmployeePassword = rs2.getString("EmployeePassword");
                String EmployeeLocation = rs2.getString("EmployeeLocation");

                String TerminateEmployeeData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail,EmployeeJoiningDate,EmployeeSalary,EmployeePassword,EmployeeLocation};
                DefaultTableModel ETM2 = (DefaultTableModel)UEIDetails.getModel();
                ETM2.addRow(TerminateEmployeeData);
            }

            connection2.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonFetchinUEIActionPerformed

    private void jButtonSearchUEIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchUEIActionPerformed
        /*int row = TECDetails.getSelectedRow();
        String id = TECDetails.getModel().getValueAt(row,0).toString();
        String name = TECDetails.getModel().getValueAt(row,1).toString();
        String contact = TECDetails.getModel().getValueAt(row,2).toString();
        String email = TECDetails.getModel().getValueAt(row,3).toString();

        System.out.println("id = "+id);
        System.out.println("name = "+name);
        System.out.println("contact = "+contact);
        System.out.println("email = "+email);*/
        //String id = TECID.getText();
        //String name = TECName.getText();
        //String contact = TECContact.getText();
        //String email = TECEmail.getText();

        int countw=0,countx=0,county=0,countz=0;
        //String w[]={},x[]={},y[]={},z[]={};
        String w="",x="",y="",z="";
        try {
            UEIDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Joining Date","Salary","Password","Location"}));
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            //Statement st1 = connection.createStatement();
            //Statement st2 = connection.createStatement();
            //Statement st3 = connection.createStatement();
            //Statement st4 = connection.createStatement();
            //Statement st5 = connection.createStatement();
            //String sql1 = "select * from Employee where EmployeeName LIKE '%?%'";
            int checkid=0,checkname=0,checkcontact=0,checkemail=0,checkjd=0,checksalary=0,checkpassword=0;
            String sql1 = "SELECT * FROM Employee WHERE ";
            if(UEIID.getText().length()>0)
            {
                sql1 +="EmployeeId LIKE '%"+UEIID.getText()+"%'";
                checkid=1;
            }

            if(UEIName.getText().length()>0)
            {
                if(checkid==0)
                {
                    sql1 += "EmployeeName LIKE '%"+UEIName.getText()+"%'";
                }
                else if(checkid==1)
                {
                    sql1 += "OR EmployeeName LIKE '%"+UEIName.getText()+"%'";
                }
                checkname=1;
            }

            if(UEIContact.getText().length()>0)
            {
                if(checkid==0&&checkname==0)
                {
                    sql1 += "EmployeeContact LIKE '%"+UEIContact.getText()+"%'";
                }
                else if(checkid==1||checkname==1)
                {
                    sql1 += "OR EmployeeContact LIKE '%"+UEIContact.getText()+"%'";
                }
                checkcontact=1;
            }

            if(UEIEmail.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0)
                {
                    sql1 += "EmployeeEmail LIKE '%"+UEIEmail.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1)
                {
                    sql1 += "OR EmployeeEmail LIKE '%"+UEIEmail.getText()+"%'";
                }
                checkemail=1;
            }
            
            if(UEIJD.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0)
                {
                    sql1 += "EmployeeJoiningDate LIKE '%"+UEIJD.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1)
                {
                    sql1 += "OR EmployeeJoiningDate LIKE '%"+UEIJD.getText()+"%'";
                }
                checkjd=1;
            }
            
            if(UEISalary.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0&&checkjd==0)
                {
                    sql1 += "EmployeeSalary LIKE '%"+UEISalary.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1||checkjd==1)
                {
                    sql1 += "OR EmployeeSalary LIKE '%"+UEISalary.getText()+"%'";
                }
                checksalary=1;
            }
            
            
            if(UEIPassword.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0&&checkjd==0&&checksalary==0)
                {
                    sql1 += "EmployeePassword LIKE '%"+UEIPassword.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1||checkjd==1||checksalary==1)
                {
                    sql1 += "OR EmployeePassword LIKE '%"+UEIPassword.getText()+"%'";
                }
                checkpassword=1;
            }

            if(UEILocation.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0&&checkjd==0&&checksalary==0&&checkpassword==0)
                {
                    sql1 += "EmployeeLocation LIKE '%"+UEILocation.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1||checkjd==1||checksalary==1||checkpassword==1)
                {
                    sql1 += "OR EmployeeLocation LIKE '%"+UEILocation.getText()+"%'";
                }
            }
            
            sql1 += "AND EmployeeQuittingDate = 'In Contract' ";

            System.out.println("sql query is "+sql1);

            PreparedStatement pst = connection.prepareStatement(sql1);
            ResultSet rs1 = pst.executeQuery();

            while(rs1.next()){
                String EmployeeId = String.valueOf(rs1.getInt("EmployeeId"));
                String EmployeeName = rs1.getString("EmployeeName");
                String EmployeeContact = rs1.getString("EmployeeContact");
                String EmployeeEmail = rs1.getString("EmployeeEmail");
                String EmployeeJoiningDate = rs1.getString("EmployeeJoiningDate");
                String EmployeeSalary = rs1.getString("EmployeeSalary");
                String EmployeePassword = rs1.getString("EmployeePassword");
                String EmployeeLocation = rs1.getString("EmployeeLocation");

                String SearchEmpData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail,EmployeeJoiningDate,EmployeeSalary,EmployeePassword,EmployeeLocation};
                DefaultTableModel OTM = (DefaultTableModel)UEIDetails.getModel();
                OTM.addRow(SearchEmpData);
            }

            //connection.close();

            /*String f = "gaqegqg";
            System.out.println("actual f = "+f);
            System.out.println("updated f = "+f.toUpperCase());

            String sql2 = "select EmployeeId from Employee";
            ResultSet rs2 = st2.executeQuery(sql2);
            while(rs2.next()){
                String EmployeeId = String.valueOf(rs2.getInt("EmployeeId"));
                if(EmployeeId.contains(TECID.getText())&&(TECID.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeId);
                    System.out.println("contains "+TECID.getText());
                    w=EmployeeId;
                    System.out.println("w="+w);
                    break;
                }
            }

            String sql3 = "select UPPER(EmployeeName) EmployeeName from Employee";
            ResultSet rs3 = st3.executeQuery(sql3);
            while(rs3.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeName = rs3.getString("EmployeeName");
                if((EmployeeName.toUpperCase()).contains(TECName.getText().toUpperCase())&&(TECName.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeName);
                    System.out.println("contains "+TECName.getText());
                    x=EmployeeName;
                    System.out.println("x="+x);
                    break;
                }
            }

            String sql4 = "select EmployeeContact from Employee";
            ResultSet rs4 = st4.executeQuery(sql4);
            while(rs4.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeContact = rs4.getString("EmployeeContact");
                if(EmployeeContact.contains(TECContact.getText())&&(TECContact.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeContact);
                    System.out.println("contains "+TECContact.getText());
                    y=EmployeeContact;
                    System.out.println("y="+y);
                    break;
                }
            }

            String sql5 = "select UPPER(EmployeeEmail) EmployeeEmail from Employee";
            ResultSet rs5 = st5.executeQuery(sql5);
            while(rs5.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeEmail = rs5.getString("EmployeeEmail");
                if((EmployeeEmail.toUpperCase()).contains(TECEmail.getText().toUpperCase())&&(TECEmail.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeEmail);
                    System.out.println("contains "+TECEmail.getText());
                    z=EmployeeEmail;
                    System.out.println("z="+z);
                    break;
                }
            }

            String sql1 = "select * from Employee where EmployeeId = ? or UPPER(EmployeeName) = ? or EmployeeContact = ? or EmployeeEmail = ?";
            PreparedStatement pst2 = connection.prepareStatement(sql1);
            pst2.setString(1,w);
            pst2.setString(2,x);
            pst2.setString(3,y);
            pst2.setString(4,z);
            ResultSet rs1 = pst2.executeQuery();
            while(rs1.next()){
                String EmployeeId = String.valueOf(rs1.getInt("EmployeeId"));
                String EmployeeName = rs1.getString("EmployeeName");
                String EmployeeContact = rs1.getString("EmployeeContact");
                String EmployeeEmail = rs1.getString("EmployeeEmail");

                String EmpData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail};
                DefaultTableModel OTM = (DefaultTableModel)TECDetails.getModel();
                OTM.addRow(EmpData);
            }

            connection.close();*/

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonSearchUEIActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearMouseClicked
        UEIID.setText("");
        UEIName.setText("");
        UEIContact.setText("");
        UEIEmail.setText("");
        UEIJD.setText("");
        UEISalary.setText("");
        UEIPassword.setText("");
        UEILocation.setText("");
    }//GEN-LAST:event_jButtonClearMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateEmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateEmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateEmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateEmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateEmployeeInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UEIContact;
    private javax.swing.JTable UEIDetails;
    private javax.swing.JTextField UEIEmail;
    private javax.swing.JTextField UEIID;
    private javax.swing.JTextField UEIJD;
    private javax.swing.JTextField UEILocation;
    private javax.swing.JTextField UEIName;
    private javax.swing.JTextField UEIPassword;
    private javax.swing.JTextField UEISalary;
    private javax.swing.JButton jButtonBFUEI;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonFetchinUEI;
    private javax.swing.JButton jButtonSearchUEI;
    private javax.swing.JButton jButtonUpdateFromEmployeeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelUEIClose;
    private javax.swing.JLabel jLabelUEIMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
