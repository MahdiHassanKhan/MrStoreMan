/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahdi
 */
public class SellItems2 extends javax.swing.JFrame {

    /**
     * Creates new form SellItems2
     */
    static String itemid2;
    static String itembrand2;
    static String itemdescription2;
    static String itemsellingprice2;
    static String itemmd2;
    static String itemed2;
    static String itemvl2;
    static String itemweight2;
    static String itemstatus2;
    static String itemquantity_instock2;
    
    public SellItems2() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ItemBrand = new javax.swing.JTextField();
        ItemDescription = new javax.swing.JTextField();
        ItemPRFrom = new javax.swing.JTextField();
        ViewEditCartSI2 = new javax.swing.JButton();
        jButtonBFSI2 = new javax.swing.JButton();
        jLabelSI2Min = new javax.swing.JLabel();
        jLabelSI2Close = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ItemPRTo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        SIDetails2 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jButtonFetchinSI2 = new javax.swing.JButton();
        jButtonSearchSI2 = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ItemID = new javax.swing.JTextField();
        jButtonCheckItemSI2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Brand:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Type/Description:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Price Range");

        ItemBrand.setBackground(new java.awt.Color(234, 67, 73));
        ItemBrand.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ItemBrand.setForeground(new java.awt.Color(240, 240, 240));

        ItemDescription.setBackground(new java.awt.Color(234, 67, 73));
        ItemDescription.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ItemDescription.setForeground(new java.awt.Color(240, 240, 240));
        ItemDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemDescriptionActionPerformed(evt);
            }
        });

        ItemPRFrom.setBackground(new java.awt.Color(234, 67, 73));
        ItemPRFrom.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ItemPRFrom.setForeground(new java.awt.Color(240, 240, 240));
        ItemPRFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPRFromActionPerformed(evt);
            }
        });

        ViewEditCartSI2.setBackground(new java.awt.Color(243, 67, 73));
        ViewEditCartSI2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ViewEditCartSI2.setForeground(new java.awt.Color(240, 240, 240));
        ViewEditCartSI2.setText("View & Edit Cart");
        ViewEditCartSI2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewEditCartSI2MouseClicked(evt);
            }
        });
        ViewEditCartSI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewEditCartSI2ActionPerformed(evt);
            }
        });

        jButtonBFSI2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFSI2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFSI2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFSI2.setText("<-");
        jButtonBFSI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFSI2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFSI2MouseClicked(evt);
            }
        });
        jButtonBFSI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBFSI2ActionPerformed(evt);
            }
        });

        jLabelSI2Min.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelSI2Min.setForeground(new java.awt.Color(240, 240, 240));
        jLabelSI2Min.setText("-");
        jLabelSI2Min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelSI2Min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSI2MinMouseClicked(evt);
            }
        });

        jLabelSI2Close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelSI2Close.setForeground(new java.awt.Color(240, 240, 240));
        jLabelSI2Close.setText("X");
        jLabelSI2Close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelSI2Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSI2CloseMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("From:");

        ItemPRTo.setBackground(new java.awt.Color(234, 67, 73));
        ItemPRTo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ItemPRTo.setForeground(new java.awt.Color(240, 240, 240));
        ItemPRTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPRToActionPerformed(evt);
            }
        });

        /////////////////
        SIDetails2 = new JTable()
        {
            public boolean isCellEditable(int row, int column)
            {
                for(int i=0 ; i<SIDetails2.getRowCount() ;i++)
                {
                    if(row == i)
                    {
                        return false;
                    }
                }
                return true;
            }
        };
        /////////////////
        SIDetails2.setBackground(new java.awt.Color(243, 67, 73));
        SIDetails2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SIDetails2.setForeground(new java.awt.Color(240, 240, 240));
        SIDetails2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Type/Description", "Purchase Price", "Selling Price", "Manufacture Date", "Expiration Date", "Validation Left", "Weight(gm)", "Quantity", "Status"
            }
        ));
        SIDetails2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SIDetails2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SIDetails2);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Sell Items2");

        jButtonFetchinSI2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonFetchinSI2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonFetchinSI2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonFetchinSI2.setText("Fetch");
        jButtonFetchinSI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFetchinSI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchinSI2ActionPerformed(evt);
            }
        });

        jButtonSearchSI2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonSearchSI2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSearchSI2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonSearchSI2.setText("Search");
        jButtonSearchSI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSearchSI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchSI2ActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(234, 67, 73));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(240, 240, 240));
        jButtonClear.setText("Clear");
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("To:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("ID:");

        ItemID.setBackground(new java.awt.Color(234, 67, 73));
        ItemID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ItemID.setForeground(new java.awt.Color(240, 240, 240));

        jButtonCheckItemSI2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonCheckItemSI2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonCheckItemSI2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonCheckItemSI2.setText("Check Item");
        jButtonCheckItemSI2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCheckItemSI2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCheckItemSI2MouseClicked(evt);
            }
        });
        jButtonCheckItemSI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckItemSI2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonBFSI2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addComponent(ItemPRFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemID)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSearchSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ItemBrand)
                            .addComponent(ItemDescription)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ItemPRTo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(411, 411, 411)
                                .addComponent(jLabelSI2Min)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelSI2Close))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ViewEditCartSI2)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFetchinSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCheckItemSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButtonBFSI2)
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ItemBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(ItemPRTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemPRFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonClear)
                            .addComponent(jButtonSearchSI2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelSI2Close)
                                .addComponent(jLabelSI2Min)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFetchinSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewEditCartSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCheckItemSI2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemDescriptionActionPerformed

    private void ItemPRFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPRFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemPRFromActionPerformed

    private void ViewEditCartSI2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewEditCartSI2MouseClicked
        ViewEditCart2 vec2 = new ViewEditCart2();
        vec2.setVisible(true);
        vec2.pack();
        vec2.setLocationRelativeTo(null);
        vec2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_ViewEditCartSI2MouseClicked

    private void ViewEditCartSI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewEditCartSI2ActionPerformed

    }//GEN-LAST:event_ViewEditCartSI2ActionPerformed

    private void jButtonBFSI2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFSI2MouseClicked
        ItemInfo2 ii23 = new ItemInfo2();
        ii23.setVisible(true);
        ii23.pack();
        ii23.setLocationRelativeTo(null);
        ii23.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonBFSI2MouseClicked

    private void jButtonBFSI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBFSI2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBFSI2ActionPerformed

    private void jLabelSI2MinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSI2MinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelSI2MinMouseClicked

    private void jLabelSI2CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSI2CloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelSI2CloseMouseClicked

    private void ItemPRToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPRToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemPRToActionPerformed

    private void SIDetails2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SIDetails2MouseClicked
        int row = SIDetails2.getSelectedRow();
        String selection = SIDetails2.getModel().getValueAt(row,0).toString();
        //String sql = "select * from Employee where EmployeeId = " + selection;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection3 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement st3 = connection3.createStatement();
            String sql3 = "select * from Item where ItemId = " + selection;
            ResultSet rs3 = st3.executeQuery(sql3);
            if(rs3.next()){
                ItemID.setText(rs3.getString("ItemId"));
                ItemBrand.setText(rs3.getString("ItemBrand"));
                ItemDescription.setText(rs3.getString("ItemDescription"));

                itemid2 = rs3.getString("ItemId");
                itembrand2 = rs3.getString("ItemBrand");
                itemdescription2 = rs3.getString("ItemDescription");
                itemsellingprice2 = rs3.getString("ItemSellingPrice");
                itemmd2 = rs3.getString("ItemManufactureDate");
                itemed2 = rs3.getString("ItemExpirationDate");
                itemvl2 = rs3.getString("ItemValidationLeft");
                itemweight2 = rs3.getString("ItemWeight");
                itemstatus2 = rs3.getString("ItemStatus");
                itemquantity_instock2 = rs3.getString("ItemQuantity");
                //ItemPRTo.setText(rs3.getString("ItemPurchasePrice"));
                //ItemPRFrom.setText(rs3.getString("ItemSellingPrice"));

                //Date manufacturedatecheck = ItemManufactureDate.getDate();
                //SimpleDateFormat mdf = new SimpleDateFormat("yyyy-MM-dd");
                //String manufacturedate = mdf.format(ItemManufactureDate.getDate());
                //pst.setString(5, manufacturedate);
                //ItemManufactureDate.setDate(rs3.getDate("ItemManufactureDate"));
                //ItemExpirationDate.setDate(rs3.getDate("ItemExpirationDate"));

                //ItemWeight.setText(rs3.getString("ItemWeight"));
                //ItemQuantity.setText(rs3.getString("ItemQuantity"));
            }

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this,"First select an Item");
        }

        if(evt.getClickCount()==2)
        {
            /*AddToCart atc = new AddToCart();
            atc.setVisible(true);
            atc.pack();
            atc.setLocationRelativeTo(null);
            atc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.dispose();*/
            new AddToCart2(itemid2,itembrand2,itemdescription2,itemsellingprice2,itemmd2,itemed2,itemvl2,itemweight2,itemstatus2,itemquantity_instock2).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_SIDetails2MouseClicked

    private void jButtonFetchinSI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFetchinSI2ActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");

            /*Date md = new Date();
            java.sql.Date mdate = new java.sql.Date(md.getTime());
            System.out.println(md);
            System.out.println(mdate);

            Date ed = new Date();
            java.sql.Date edate = new java.sql.Date(ed.getTime());
            System.out.println(ed);
            System.out.println(edate);

            String seconddate = "2021-03-20";
            Date date2=new SimpleDateFormat("yyyy-MM-dd").parse(seconddate);
            java.sql.Date newdate = new java.sql.Date(date2.getTime());
            System.out.println(seconddate+"\t"+date2);
            System.out.println(seconddate+"\t"+newdate);

            System.out.println("manufacture date = "+mdate);
            System.out.println("expiration date = "+edate);

            long diff = md.getTime()-ed.getTime();
            long sec = diff/1000;
            long min = sec/60;
            long hours = min/60;
            long days = hours/24;

            System.out.println("diff = "+diff);
            System.out.println("sec = "+sec);
            System.out.println("min = "+min);
            System.out.println("hours = "+hours);
            System.out.println("days = "+days);

            if(mdate.compareTo(edate)<=0)
            {
                System.out.println("Not expired");
            }

            if(mdate.compareTo(edate)>0)
            {
                System.out.println("expired");
            }*/

            Date date = new Date();
            java.sql.Date presentdate = new java.sql.Date(date.getTime());
            System.out.println(date);
            System.out.println(presentdate);

            String sqlInsert = "UPDATE Item SET Item.[ItemStatus] = 'Expired' WHERE Item.[ItemExpirationDate] <= ?;\n" +
            "Update Item SET Item.[ItemStatus] = 'Out of stock' WHERE Item.[ItemQuantity] = 0;\n" +
            "Update Item SET Item.[ItemStatus] = 'Available' WHERE Item.[ItemQuantity] > 0 and Item.[ItemExpirationDate] > ?;" +
            "update Item set ItemValidationLeft = DATEDIFF(day, GETDATE(), ItemExpirationDate)";

            PreparedStatement pst = con.prepareStatement(sqlInsert);
            SimpleDateFormat prd = new SimpleDateFormat("yyyy-MM-dd");
            String pd = prd.format(date);
            System.out.println(pd);
            pst.setString(1, pd);
            pst.setString(2, pd);

            pst.executeUpdate();
            //JOptionPane.showMessageDialog(null,"Item Status updated");
            SIDetails2.setModel(new DefaultTableModel(null, new String[]{"ID","Brand","Type/Description","Purchase Price","Selling Price","Manufacture Date","Expiration Date","Validation Left","Weight(gm)","Quantity","Status"}));
        }

        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,e);
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection2 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");

            SIDetails2.setModel(new DefaultTableModel(null, new String[]{"ID","Brand","Type/Description","Purchase Price","Selling Price","Manufacture Date","Expiration Date","Validation Left","Weight(gm)","Quantity","Status"}));
            Statement st2 = connection2.createStatement();
            String sql2 = "select * from Item ";
            ResultSet rs2 = st2.executeQuery(sql2);

            Date presentdate = new Date();
            java.sql.Date presentdatecheck = new java.sql.Date(presentdate.getTime());
            SimpleDateFormat pd = new SimpleDateFormat("yyyy-MM-dd");
            String prd = pd.format(presentdatecheck);

            while(rs2.next()){
                String ItemId = String.valueOf(rs2.getInt("ItemId"));
                String ItemBrand = rs2.getString("ItemBrand");
                String ItemDescription = rs2.getString("ItemDescription");
                String ItemPurchasePrice = rs2.getString("ItemPurchasePrice");
                String ItemSellingPrice = rs2.getString("ItemSellingPrice");
                String ItemManufactureDate = rs2.getString("ItemManufactureDate");
                String ItemExpirationDate = rs2.getString("ItemExpirationDate");
                String ItemValidationLeft = rs2.getString("ItemValidationLeft");
                String ItemWeight = rs2.getString("ItemWeight");
                String ItemQuantity = rs2.getString("ItemQuantity");
                String ItemStatus = rs2.getString("ItemStatus");

                String ItemData[] = {ItemId,ItemBrand,ItemDescription,ItemPurchasePrice,ItemSellingPrice,ItemManufactureDate,ItemExpirationDate,ItemValidationLeft,ItemWeight,ItemQuantity,ItemStatus};
                DefaultTableModel items = (DefaultTableModel)SIDetails2.getModel();
                items.addRow(ItemData);
            }

            connection2.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonFetchinSI2ActionPerformed

    private void jButtonSearchSI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchSI2ActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");

            /*Date md = new Date();
            java.sql.Date mdate = new java.sql.Date(md.getTime());
            System.out.println(md);
            System.out.println(mdate);

            Date ed = new Date();
            java.sql.Date edate = new java.sql.Date(ed.getTime());
            System.out.println(ed);
            System.out.println(edate);

            String seconddate = "2021-03-20";
            Date date2=new SimpleDateFormat("yyyy-MM-dd").parse(seconddate);
            java.sql.Date newdate = new java.sql.Date(date2.getTime());
            System.out.println(seconddate+"\t"+date2);
            System.out.println(seconddate+"\t"+newdate);

            System.out.println("manufacture date = "+mdate);
            System.out.println("expiration date = "+edate);

            long diff = md.getTime()-ed.getTime();
            long sec = diff/1000;
            long min = sec/60;
            long hours = min/60;
            long days = hours/24;

            System.out.println("diff = "+diff);
            System.out.println("sec = "+sec);
            System.out.println("min = "+min);
            System.out.println("hours = "+hours);
            System.out.println("days = "+days);

            if(mdate.compareTo(edate)<=0)
            {
                System.out.println("Not expired");
            }

            if(mdate.compareTo(edate)>0)
            {
                System.out.println("expired");
            }*/

            Date date = new Date();
            java.sql.Date presentdate = new java.sql.Date(date.getTime());
            System.out.println(date);
            System.out.println(presentdate);

            String sqlInsert = "UPDATE Item SET Item.[ItemStatus] = 'Expired' WHERE Item.[ItemExpirationDate] <= ?;\n" +
            "Update Item SET Item.[ItemStatus] = 'Out of stock' WHERE Item.[ItemQuantity] = 0;\n" +
            "Update Item SET Item.[ItemStatus] = 'Available' WHERE Item.[ItemQuantity] > 0 and Item.[ItemExpirationDate] > ?;" +
            "update Item set ItemValidationLeft = DATEDIFF(day, GETDATE(), ItemExpirationDate)";

            PreparedStatement pst = con.prepareStatement(sqlInsert);
            SimpleDateFormat prd = new SimpleDateFormat("yyyy-MM-dd");
            String pd = prd.format(date);
            System.out.println(pd);
            pst.setString(1, pd);
            pst.setString(2, pd);

            pst.executeUpdate();
            //JOptionPane.showMessageDialog(null,"Item Status updated");
            SIDetails2.setModel(new DefaultTableModel(null, new String[]{"ID","Brand","Type/Description","Purchase Price","Selling Price","Manufacture Date","Expiration Date","Validation Left","Weight(gm)","Quantity","Status"}));
        }

        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,e);
        }

        try {
            SIDetails2.setModel(new DefaultTableModel(null, new String[]{"ID","Brand","Type/Description","Purchase Price","Selling Price","Manufacture Date","Expiration Date","Validation Left","Weight(gm)","Quantity","Status"}));
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");

            int checkid=0,checkbrand=0,checkdescription=0,checkfrom=0,checkto=0;
            String sql1 = "SELECT * FROM Item WHERE ";

            if(ItemID.getText().length()>0)
            {
                sql1 +="ItemId LIKE '%"+ItemID.getText()+"%'";
                checkid=1;
            }

            if(ItemBrand.getText().length()>0)
            {
                if(checkid==0)
                {
                    sql1 +="ItemBrand LIKE '%"+ItemBrand.getText()+"%'";
                }
                else if(checkid==1)
                {
                    sql1 += "AND ItemBrand LIKE '%"+ItemBrand.getText()+"%'";
                }
                checkbrand=1;
            }

            if(ItemDescription.getText().length()>0)
            {
                if(checkid==0&&checkbrand==0)
                {
                    sql1 += "ItemDescription LIKE '%"+ItemDescription.getText()+"%'";
                }
                else if(checkid==1||checkbrand==1)
                {
                    sql1 += "AND ItemDescription LIKE '%"+ItemDescription.getText()+"%'";
                }
                checkdescription=1;
            }

            if(ItemPRFrom.getText().length()>0)
            {
                if(checkid==0&&checkbrand==0&&checkdescription==0)
                {
                    sql1 += "ItemSellingPrice >= "+ItemPRFrom.getText()+"";
                }
                else if(checkid==1||checkbrand==1||checkdescription==1)
                {
                    sql1 += "AND ItemSellingPrice >= "+ItemPRFrom.getText()+"";
                }
                checkfrom=1;
            }

            if(ItemPRTo.getText().length()>0)
            {
                if(checkid==0&&checkbrand==0&&checkdescription==0&&checkfrom==0)
                {
                    sql1 += "ItemSellingPrice <= "+ItemPRTo.getText()+"";
                }
                if(checkid==1||checkbrand==1||checkdescription==1||checkfrom==1)
                {
                    sql1 += "AND ItemSellingPrice <= "+ItemPRTo.getText()+"";
                }
                checkto=1;
            }

            //sql1 += "AND EmployeeQuittingDate = 'In Contract' ";

            System.out.println("sql query is "+sql1);

            PreparedStatement pst = connection.prepareStatement(sql1);
            ResultSet rs1 = pst.executeQuery();

            while(rs1.next()){
                String ItemId = String.valueOf(rs1.getInt("ItemId"));
                String ItemBrand = rs1.getString("ItemBrand");
                String ItemDescription = rs1.getString("ItemDescription");
                String ItemPurchasePrice = rs1.getString("ItemPurchasePrice");
                String ItemSellingPrice = rs1.getString("ItemSellingPrice");
                String ItemManufactureDate = rs1.getString("ItemManufactureDate");
                String ItemExpirationDate = rs1.getString("ItemExpirationDate");
                String ItemValidationLeft = rs1.getString("ItemValidationLeft");
                String ItemWeight = rs1.getString("ItemWeight");
                String ItemQuantity = rs1.getString("ItemQuantity");
                String ItemStatus = rs1.getString("ItemStatus");

                String ItemData[] = {ItemId,ItemBrand,ItemDescription,ItemPurchasePrice,ItemSellingPrice,ItemManufactureDate,ItemExpirationDate,ItemValidationLeft,ItemWeight,ItemQuantity,ItemStatus};
                DefaultTableModel items = (DefaultTableModel)SIDetails2.getModel();
                items.addRow(ItemData);
            }

            //connection.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_jButtonSearchSI2ActionPerformed

    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearMouseClicked
        ItemID.setText("");
        ItemBrand.setText("");
        ItemDescription.setText("");
        ItemPRFrom.setText("");
        ItemPRTo.setText("");
    }//GEN-LAST:event_jButtonClearMouseClicked

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonCheckItemSI2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCheckItemSI2MouseClicked
        /*  AddToCart atc = new AddToCart();
        atc.setVisible(true);
        atc.pack();
        atc.setLocationRelativeTo(null);
        atc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();*/
    }//GEN-LAST:event_jButtonCheckItemSI2MouseClicked

    private void jButtonCheckItemSI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckItemSI2ActionPerformed
        try {
            int row = SIDetails2.getSelectedRow();
            String selection = SIDetails2.getModel().getValueAt(row,0).toString();
            //String sql = "select * from Employee where EmployeeId = " + selection;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection3 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement st3 = connection3.createStatement();
            String sql3 = "select * from Item where ItemId = " + selection;
            ResultSet rs3 = st3.executeQuery(sql3);
            if(rs3.next()){
                ItemID.setText(rs3.getString("ItemId"));
                ItemBrand.setText(rs3.getString("ItemBrand"));
                ItemDescription.setText(rs3.getString("ItemDescription"));

                itemid2 = rs3.getString("ItemId");
                itembrand2 = rs3.getString("ItemBrand");
                itemdescription2 = rs3.getString("ItemDescription");
                itemsellingprice2 = rs3.getString("ItemSellingPrice");
                itemmd2 = rs3.getString("ItemManufactureDate");
                itemed2 = rs3.getString("ItemExpirationDate");
                itemvl2 = rs3.getString("ItemValidationLeft");
                itemweight2 = rs3.getString("ItemWeight");
                itemstatus2 = rs3.getString("ItemStatus");
                itemquantity_instock2 = rs3.getString("ItemQuantity");

                /*new OwnerInterface(username).setVisible(true); /*******************/
                //oiStart.setVisible(true);
                //oiStart.pack();
                //oiStart.setLocationRelativeTo(null);
                //oiStart.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                //this.dispose();

                new AddToCart2(itemid2,itembrand2,itemdescription2,itemsellingprice2,itemmd2,itemed2,itemvl2,itemweight2,itemstatus2,itemquantity_instock2).setVisible(true);
                this.dispose();
                //ItemPRTo.setText(rs3.getString("ItemPurchasePrice"));
                //ItemPRFrom.setText(rs3.getString("ItemSellingPrice"));

                //Date manufacturedatecheck = ItemManufactureDate.getDate();
                //SimpleDateFormat mdf = new SimpleDateFormat("yyyy-MM-dd");
                //String manufacturedate = mdf.format(ItemManufactureDate.getDate());
                //pst.setString(5, manufacturedate);
                //ItemManufactureDate.setDate(rs3.getDate("ItemManufactureDate"));
                //ItemExpirationDate.setDate(rs3.getDate("ItemExpirationDate"));

                //ItemWeight.setText(rs3.getString("ItemWeight"));
                //ItemQuantity.setText(rs3.getString("ItemQuantity"));
            }

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this,"You didn't choose any item");
        }
    }//GEN-LAST:event_jButtonCheckItemSI2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellItems2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellItems2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellItems2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellItems2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellItems2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ItemBrand;
    private javax.swing.JTextField ItemDescription;
    private javax.swing.JTextField ItemID;
    private javax.swing.JTextField ItemPRFrom;
    private javax.swing.JTextField ItemPRTo;
    private javax.swing.JTable SIDetails2;
    private javax.swing.JButton ViewEditCartSI2;
    private javax.swing.JButton jButtonBFSI2;
    private javax.swing.JButton jButtonCheckItemSI2;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonFetchinSI2;
    private javax.swing.JButton jButtonSearchSI2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelSI2Close;
    private javax.swing.JLabel jLabelSI2Min;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
