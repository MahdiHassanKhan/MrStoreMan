/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahdi
 */
public class RenewEmployeeContract extends javax.swing.JFrame {

    /**
     * Creates new form RenewEmployeeContract
     */
    public RenewEmployeeContract() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RECDetails = new javax.swing.JTable();
        jButtonBFREC = new javax.swing.JButton();
        jButtonFetchinREC = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelRECClose = new javax.swing.JLabel();
        jLabelRECMin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        RECID = new javax.swing.JTextField();
        RECName = new javax.swing.JTextField();
        RECContact = new javax.swing.JTextField();
        RECEmail = new javax.swing.JTextField();
        jButtonConfirmRenewal = new javax.swing.JButton();
        jButtonSearchREC = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        RECLocation = new javax.swing.JTextField();
        jButtonClear = new javax.swing.JButton();
        RECQD = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        RECSalary = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        RECDetails.setBackground(new java.awt.Color(243, 67, 73));
        RECDetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECDetails.setForeground(new java.awt.Color(240, 240, 240));
        RECDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Email", "Quitting Date", "Salary", "Location"
            }
        ));
        RECDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RECDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RECDetails);

        jButtonBFREC.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFREC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFREC.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFREC.setText("<-");
        jButtonBFREC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFREC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFRECMouseClicked(evt);
            }
        });
        jButtonBFREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBFRECActionPerformed(evt);
            }
        });

        jButtonFetchinREC.setBackground(new java.awt.Color(243, 67, 73));
        jButtonFetchinREC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonFetchinREC.setForeground(new java.awt.Color(240, 240, 240));
        jButtonFetchinREC.setText("Fetch");
        jButtonFetchinREC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFetchinREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchinRECActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Employee Contract Renewal");

        jLabelRECClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelRECClose.setForeground(new java.awt.Color(240, 240, 240));
        jLabelRECClose.setText("X");
        jLabelRECClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRECClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRECCloseMouseClicked(evt);
            }
        });

        jLabelRECMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelRECMin.setForeground(new java.awt.Color(240, 240, 240));
        jLabelRECMin.setText("-");
        jLabelRECMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRECMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRECMinMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Contact:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Email:");

        RECID.setBackground(new java.awt.Color(234, 67, 73));
        RECID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECID.setForeground(new java.awt.Color(240, 240, 240));
        RECID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECIDActionPerformed(evt);
            }
        });

        RECName.setBackground(new java.awt.Color(234, 67, 73));
        RECName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECName.setForeground(new java.awt.Color(240, 240, 240));
        RECName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECNameActionPerformed(evt);
            }
        });

        RECContact.setBackground(new java.awt.Color(234, 67, 73));
        RECContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECContact.setForeground(new java.awt.Color(240, 240, 240));
        RECContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECContactActionPerformed(evt);
            }
        });

        RECEmail.setBackground(new java.awt.Color(234, 67, 73));
        RECEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECEmail.setForeground(new java.awt.Color(240, 240, 240));
        RECEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECEmailActionPerformed(evt);
            }
        });

        jButtonConfirmRenewal.setBackground(new java.awt.Color(243, 67, 73));
        jButtonConfirmRenewal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonConfirmRenewal.setForeground(new java.awt.Color(240, 240, 240));
        jButtonConfirmRenewal.setText("Confirm Renewal");
        jButtonConfirmRenewal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonConfirmRenewal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConfirmRenewalMouseClicked(evt);
            }
        });
        jButtonConfirmRenewal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmRenewalActionPerformed(evt);
            }
        });

        jButtonSearchREC.setBackground(new java.awt.Color(243, 67, 73));
        jButtonSearchREC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSearchREC.setForeground(new java.awt.Color(240, 240, 240));
        jButtonSearchREC.setText("Search");
        jButtonSearchREC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSearchREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchRECActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Location:");

        RECLocation.setBackground(new java.awt.Color(234, 67, 73));
        RECLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RECLocation.setForeground(new java.awt.Color(240, 240, 240));
        RECLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECLocationActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(234, 67, 73));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(240, 240, 240));
        jButtonClear.setText("Clear");
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        RECQD.setBackground(new java.awt.Color(234, 67, 73));
        RECQD.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        RECQD.setForeground(new java.awt.Color(240, 240, 240));
        RECQD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECQDActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Quitting Date:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Salary:");

        RECSalary.setBackground(new java.awt.Color(234, 67, 73));
        RECSalary.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        RECSalary.setForeground(new java.awt.Color(240, 240, 240));
        RECSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RECSalaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RECName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RECID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RECLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RECSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonSearchREC))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(RECQD, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RECEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RECContact, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonBFREC))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelRECMin)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelRECClose)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonConfirmRenewal)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonFetchinREC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRECMin)
                            .addComponent(jLabelRECClose))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonBFREC))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECQD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RECLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSearchREC)
                            .addComponent(jButtonClear))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFetchinREC)
                    .addComponent(jButtonConfirmRenewal))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RECDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RECDetailsMouseClicked
        int row = RECDetails.getSelectedRow();
        String selection = RECDetails.getModel().getValueAt(row,0).toString();
        //String sql = "select * from Employee where EmployeeId = " + selection;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection3 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement st3 = connection3.createStatement();
            String sql3 = "select * from Employee where EmployeeId = " + selection;
            ResultSet rs3 = st3.executeQuery(sql3);
            if(rs3.next()){
                RECID.setText(rs3.getString("EmployeeId"));
                RECName.setText(rs3.getString("EmployeeName"));
                RECContact.setText(rs3.getString("EmployeeContact"));
                RECEmail.setText(rs3.getString("EmployeeEmail"));
                //RECJD.setText(rs3.getString("EmployeeJoiningDate"));
                RECQD.setText(rs3.getString("EmployeeQuittingDate"));
                RECSalary.setText(rs3.getString("EmployeeSalary"));
                //TECPassword.setText(rs3.getString("EmployeePassword"));
                RECLocation.setText(rs3.getString("EmployeeLocation"));
            }

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_RECDetailsMouseClicked

    private void jButtonBFRECMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFRECMouseClicked
        EmployeeInfo ei3 = new EmployeeInfo();
        ei3.setVisible(true);
        ei3.pack();
        ei3.setLocationRelativeTo(null);
        ei3.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonBFRECMouseClicked

    private void jButtonBFRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBFRECActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBFRECActionPerformed

    private void jButtonFetchinRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFetchinRECActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection2 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            RECDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Quitting Date","Salary","Location"}));
            Statement st2 = connection2.createStatement();
            String sql2 = "select * from Employee where EmployeeQuittingDate <> 'In Contract' ";
            ResultSet rs2 = st2.executeQuery(sql2);
            while(rs2.next()){
                String EmployeeId = String.valueOf(rs2.getInt("EmployeeId"));
                String EmployeeName = rs2.getString("EmployeeName");
                String EmployeeContact = rs2.getString("EmployeeContact");
                String EmployeeEmail = rs2.getString("EmployeeEmail");
                String EmployeeJoiningDate = rs2.getString("EmployeeJoiningDate");
                String EmployeeSalary = rs2.getString("EmployeeSalary");
                String EmployeeQuittingDate = rs2.getString("EmployeeQuittingDate");
                String EmployeePassword = rs2.getString("EmployeePassword");
                String EmployeeLocation = rs2.getString("EmployeeLocation");

                String RenewEmployeeData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail,EmployeeQuittingDate,EmployeeSalary,EmployeeLocation};
                DefaultTableModel ETM2 = (DefaultTableModel)RECDetails.getModel();
                ETM2.addRow(RenewEmployeeData);
            }

            connection2.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonFetchinRECActionPerformed

    private void jLabelRECCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRECCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelRECCloseMouseClicked

    private void jLabelRECMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRECMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelRECMinMouseClicked

    private void RECIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECIDActionPerformed

    private void RECNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECNameActionPerformed

    private void RECContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECContactActionPerformed

    private void RECEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECEmailActionPerformed

    private void jButtonConfirmRenewalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmRenewalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonConfirmRenewalMouseClicked

    private void jButtonConfirmRenewalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmRenewalActionPerformed
        int row = RECDetails.getSelectedRow();
        String cell = RECDetails.getModel().getValueAt(row,0).toString();
        String name = RECDetails.getModel().getValueAt(row,1).toString();
        String contact = RECDetails.getModel().getValueAt(row,2).toString();
        String email = RECDetails.getModel().getValueAt(row,3).toString();
        String qd = RECDetails.getModel().getValueAt(row,4).toString();
        String salary = RECDetails.getModel().getValueAt(row,5).toString();
        String location = RECDetails.getModel().getValueAt(row,6).toString();

        System.out.println("ID = "+cell);
        System.out.println("name = "+name);
        System.out.println("contact = "+contact);
        System.out.println("email = "+email);
        System.out.println("Quitting Date = "+qd);
        System.out.println("salary = "+salary);
        System.out.println("Location = "+location);
        //String sql = "Delete from Employee where EmployeeId = " + cell;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Date date = new Date();
            java.sql.Date quittingdate = new java.sql.Date(date.getTime());

            String sqlInsert = "update Employee set EmployeeQuittingDate = 'In Contract' where EmployeeId=?";
            PreparedStatement pst = con.prepareStatement(sqlInsert);
            pst.setString(1, RECID.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"Selected employee contract renewed successfully");
            RECDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Quitting Date","Salary","Location"}));

            /* String sql = "Delete from Employee where EmployeeId = " + cell;
            PreparedStatement pst = con.prepareStatement(sql);
            pst.execute();
            Date date = new Date();
            java.sql.Date quittingdate = new java.sql.Date(date.getTime());
            //String quittingdate = sqldate.toString();
            System.out.println("QD = "+quittingdate);

            JOptionPane.showMessageDialog(null,"Selected employee contract terminated successfully");
            TECDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Joining Date","Salary","Location"}));
            //connectionLogin.close();

            String sql2 = "Insert into TerminatedEmployee(EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail,EmployeeJoiningDate,EmployeeSalary,EmployeeQuittingDate,EmployeePassword,EmployeeLocation) values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst2 = con.prepareStatement(sql2);
            pst2.setString(1,cell);
            pst2.setString(2,name);
            pst2.setString(3,contact);
            pst2.setString(4,email);
            pst2.setString(5,jd);
            pst2.setString(6,salary);
            pst2.setDate(7,quittingdate);
            pst2.setString(8,password);
            pst2.setString(9,location);
            pst2.execute();
            */

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jButtonConfirmRenewalActionPerformed

    private void jButtonSearchRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchRECActionPerformed
        /*int row = TECDetails.getSelectedRow();
        String id = TECDetails.getModel().getValueAt(row,0).toString();
        String name = TECDetails.getModel().getValueAt(row,1).toString();
        String contact = TECDetails.getModel().getValueAt(row,2).toString();
        String email = TECDetails.getModel().getValueAt(row,3).toString();

        System.out.println("id = "+id);
        System.out.println("name = "+name);
        System.out.println("contact = "+contact);
        System.out.println("email = "+email);*/
        //String id = TECID.getText();
        //String name = TECName.getText();
        //String contact = TECContact.getText();
        //String email = TECEmail.getText();

        int countw=0,countx=0,county=0,countz=0;
        //String w[]={},x[]={},y[]={},z[]={};
        String w="",x="",y="",z="";
        try {
            RECDetails.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Joining Date","Salary","Location"}));
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            //Statement st1 = connection.createStatement();
            //Statement st2 = connection.createStatement();
            //Statement st3 = connection.createStatement();
            //Statement st4 = connection.createStatement();
            //Statement st5 = connection.createStatement();
            //String sql1 = "select * from Employee where EmployeeName LIKE '%?%'";
            int checkid=0,checkname=0,checkcontact=0,checkemail=0,checkqd=0,checksalary=0;
            String sql1 = "SELECT * FROM Employee WHERE ";
            if(RECID.getText().length()>0)
            {
                sql1 +="EmployeeId LIKE '%"+RECID.getText()+"%'";
                checkid=1;
            }

            if(RECName.getText().length()>0)
            {
                if(checkid==0)
                {
                    sql1 += "EmployeeName LIKE '%"+RECName.getText()+"%'";
                }
                else if(checkid==1)
                {
                    sql1 += "OR EmployeeName LIKE '%"+RECName.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeName LIKE '%"+TECName.getText()+"%'";
                }
                checkname=1;
            }

            if(RECContact.getText().length()>0)
            {
                if(checkid==0&&checkname==0)
                {
                    sql1 += "EmployeeContact LIKE '%"+RECContact.getText()+"%'";
                }
                else if(checkid==1||checkname==1)
                {
                    sql1 += "OR EmployeeContact LIKE '%"+RECContact.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeContact LIKE '%"+TECContact.getText()+"%'";
                }
                checkcontact=1;
            }

            if(RECEmail.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0)
                {
                    sql1 += "EmployeeEmail LIKE '%"+RECEmail.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1)
                {
                    sql1 += "OR EmployeeEmail LIKE '%"+RECEmail.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeEmail LIKE '%"+TECEmail.getText()+"%'";
                }
                checkemail=1;
            }

            if(RECQD.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0)
                {
                    sql1 += "EmployeeQuittingDate LIKE '%"+RECQD.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1)
                {
                    sql1 += "OR EmployeeQuittingDate LIKE '%"+RECQD.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeLocation LIKE '%"+TECLocation.getText()+"%'";
                }
                checkqd=1;
            }

            if(RECSalary.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0&&checkqd==0)
                {
                    sql1 += "EmployeeSalary LIKE '%"+RECSalary.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1||checkqd==1)
                {
                    sql1 += "OR EmployeeSalary LIKE '%"+RECSalary.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeLocation LIKE '%"+TECLocation.getText()+"%'";
                }
                checksalary=1;
            }

            if(RECLocation.getText().length()>0)
            {
                if(checkid==0&&checkname==0&&checkcontact==0&&checkemail==0&&checkqd==0&&checksalary==0)
                {
                    sql1 += "EmployeeLocation LIKE '%"+RECLocation.getText()+"%'";
                }
                if(checkid==1||checkname==1||checkcontact==1||checkemail==1||checkqd==1||checksalary==1)
                {
                    sql1 += "OR EmployeeLocation LIKE '%"+RECLocation.getText()+"%'";
                    //sql1 += "UNION SELECT * FROM Employee WHERE EmployeeLocation LIKE '%"+TECLocation.getText()+"%'";
                }
            }
            sql1 +="AND EmployeeQuittingDate <> 'In Contract' ";

            System.out.println("sql query is "+sql1);

            PreparedStatement pst = connection.prepareStatement(sql1);
            ResultSet rs1 = pst.executeQuery();

            while(rs1.next()){
                String EmployeeId = String.valueOf(rs1.getInt("EmployeeId"));
                String EmployeeName = rs1.getString("EmployeeName");
                String EmployeeContact = rs1.getString("EmployeeContact");
                String EmployeeEmail = rs1.getString("EmployeeEmail");
                String EmployeeQuittingDate = rs1.getString("EmployeeQuittingDate");
                String EmployeeSalary = rs1.getString("EmployeeSalary");
                String EmployeePassword = rs1.getString("EmployeePassword");
                String EmployeeLocation = rs1.getString("EmployeeLocation");

                String EmpData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail,EmployeeQuittingDate,EmployeeSalary,EmployeeLocation};
                DefaultTableModel OTM = (DefaultTableModel)RECDetails.getModel();
                OTM.addRow(EmpData);
            }

            //connection.close();

            /*String f = "gaqegqg";
            System.out.println("actual f = "+f);
            System.out.println("updated f = "+f.toUpperCase());

            String sql2 = "select EmployeeId from Employee";
            ResultSet rs2 = st2.executeQuery(sql2);
            while(rs2.next()){
                String EmployeeId = String.valueOf(rs2.getInt("EmployeeId"));
                if(EmployeeId.contains(TECID.getText())&&(TECID.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeId);
                    System.out.println("contains "+TECID.getText());
                    w=EmployeeId;
                    System.out.println("w="+w);
                    break;
                }
            }

            String sql3 = "select UPPER(EmployeeName) EmployeeName from Employee";
            ResultSet rs3 = st3.executeQuery(sql3);
            while(rs3.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeName = rs3.getString("EmployeeName");
                if((EmployeeName.toUpperCase()).contains(TECName.getText().toUpperCase())&&(TECName.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeName);
                    System.out.println("contains "+TECName.getText());
                    x=EmployeeName;
                    System.out.println("x="+x);
                    break;
                }
            }

            String sql4 = "select EmployeeContact from Employee";
            ResultSet rs4 = st4.executeQuery(sql4);
            while(rs4.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeContact = rs4.getString("EmployeeContact");
                if(EmployeeContact.contains(TECContact.getText())&&(TECContact.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeContact);
                    System.out.println("contains "+TECContact.getText());
                    y=EmployeeContact;
                    System.out.println("y="+y);
                    break;
                }
            }

            String sql5 = "select UPPER(EmployeeEmail) EmployeeEmail from Employee";
            ResultSet rs5 = st5.executeQuery(sql5);
            while(rs5.next()){
                //String EmployeeName = String.valueOf(rs3.getInt("EmployeeId"));
                String EmployeeEmail = rs5.getString("EmployeeEmail");
                if((EmployeeEmail.toUpperCase()).contains(TECEmail.getText().toUpperCase())&&(TECEmail.getText().length()>0))
                {
                    //w[countw++]=EmployeeId;
                    System.out.println("contains "+EmployeeEmail);
                    System.out.println("contains "+TECEmail.getText());
                    z=EmployeeEmail;
                    System.out.println("z="+z);
                    break;
                }
            }

            String sql1 = "select * from Employee where EmployeeId = ? or UPPER(EmployeeName) = ? or EmployeeContact = ? or EmployeeEmail = ?";
            PreparedStatement pst2 = connection.prepareStatement(sql1);
            pst2.setString(1,w);
            pst2.setString(2,x);
            pst2.setString(3,y);
            pst2.setString(4,z);
            ResultSet rs1 = pst2.executeQuery();
            while(rs1.next()){
                String EmployeeId = String.valueOf(rs1.getInt("EmployeeId"));
                String EmployeeName = rs1.getString("EmployeeName");
                String EmployeeContact = rs1.getString("EmployeeContact");
                String EmployeeEmail = rs1.getString("EmployeeEmail");

                String EmpData[] = {EmployeeId,EmployeeName,EmployeeContact,EmployeeEmail};
                DefaultTableModel OTM = (DefaultTableModel)TECDetails.getModel();
                OTM.addRow(EmpData);
            }

            connection.close();*/

        }
        catch (Exception e) {
            //e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonSearchRECActionPerformed

    private void RECLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECLocationActionPerformed

    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearMouseClicked
        RECID.setText("");
        RECName.setText("");
        RECContact.setText("");
        RECEmail.setText("");
        RECQD.setText("");
        RECSalary.setText("");
        //TECPassword.setText("");
        RECLocation.setText("");
    }//GEN-LAST:event_jButtonClearMouseClicked

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void RECQDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECQDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECQDActionPerformed

    private void RECSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RECSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RECSalaryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RenewEmployeeContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RenewEmployeeContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RenewEmployeeContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RenewEmployeeContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RenewEmployeeContract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RECContact;
    private javax.swing.JTable RECDetails;
    private javax.swing.JTextField RECEmail;
    private javax.swing.JTextField RECID;
    private javax.swing.JTextField RECLocation;
    private javax.swing.JTextField RECName;
    private javax.swing.JTextField RECQD;
    private javax.swing.JTextField RECSalary;
    private javax.swing.JButton jButtonBFREC;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonConfirmRenewal;
    private javax.swing.JButton jButtonFetchinREC;
    private javax.swing.JButton jButtonSearchREC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelRECClose;
    private javax.swing.JLabel jLabelRECMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
