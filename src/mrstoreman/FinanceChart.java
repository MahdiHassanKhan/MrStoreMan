/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Mahdi
 */
public class FinanceChart extends javax.swing.JFrame {

    /**
     * Creates new form FinanceChart
     */
    public FinanceChart() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonGenerateChart = new javax.swing.JButton();
        jDateFrom = new com.toedter.calendar.JDateChooser();
        jDateTo = new com.toedter.calendar.JDateChooser();
        panelChart = new javax.swing.JPanel();
        jLabelItemID = new javax.swing.JLabel();
        jLabelItemID1 = new javax.swing.JLabel();
        jButtonBFFC = new javax.swing.JButton();
        jComboBoxOwnerSettings = new javax.swing.JComboBox<>();
        jLabelFCMin = new javax.swing.JLabel();
        jLabelFCClose = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonClear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        jButtonGenerateChart.setBackground(new java.awt.Color(243, 67, 73));
        jButtonGenerateChart.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonGenerateChart.setForeground(new java.awt.Color(240, 240, 240));
        jButtonGenerateChart.setText("Generate Chart");
        jButtonGenerateChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateChartActionPerformed(evt);
            }
        });

        panelChart.setBackground(new java.awt.Color(243, 67, 73));
        panelChart.setBorder(new javax.swing.border.MatteBorder(null));
        panelChart.setForeground(new java.awt.Color(240, 240, 240));
        panelChart.setLayout(new java.awt.BorderLayout());

        jLabelItemID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelItemID.setForeground(new java.awt.Color(240, 240, 240));
        jLabelItemID.setText("From:");

        jLabelItemID1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelItemID1.setForeground(new java.awt.Color(240, 240, 240));
        jLabelItemID1.setText("To:");

        jButtonBFFC.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFFC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFFC.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFFC.setText("<-");
        jButtonBFFC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFFC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFFCMouseClicked(evt);
            }
        });
        jButtonBFFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBFFCActionPerformed(evt);
            }
        });

        jComboBoxOwnerSettings.setBackground(new java.awt.Color(234, 67, 73));
        jComboBoxOwnerSettings.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBoxOwnerSettings.setForeground(new java.awt.Color(240, 240, 240));
        jComboBoxOwnerSettings.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bar Chart", "Line Chart", "Area Chart" }));
        jComboBoxOwnerSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOwnerSettingsActionPerformed(evt);
            }
        });

        jLabelFCMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelFCMin.setForeground(new java.awt.Color(240, 240, 240));
        jLabelFCMin.setText("-");
        jLabelFCMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelFCMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFCMinMouseClicked(evt);
            }
        });

        jLabelFCClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelFCClose.setForeground(new java.awt.Color(240, 240, 240));
        jLabelFCClose.setText("X");
        jLabelFCClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelFCClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFCCloseMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Finance Chart");

        jButtonClear.setBackground(new java.awt.Color(234, 67, 73));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(240, 240, 240));
        jButtonClear.setText("Clear");
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(230, 230, 230)
                        .addComponent(jComboBoxOwnerSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelFCMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelFCClose)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonBFFC)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelItemID)
                                    .addComponent(jLabelItemID1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(jDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClear, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonGenerateChart, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(panelChart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jButtonGenerateChart)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonBFFC)
                        .addComponent(jComboBoxOwnerSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelFCMin)
                        .addComponent(jLabelFCClose)))
                .addGap(144, 144, 144)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelItemID1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButtonClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGenerateChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateChartActionPerformed
        int settings = jComboBoxOwnerSettings.getSelectedIndex();
        
        if(settings==0)
        {
            int countordersdate=0;
            int countordersamountperday=0;
            String[] OrdersDate= new String[countordersdate+50];
            String[] OrdersAmountPerDay= new String[countordersamountperday+50];
            float totalordersamountperday=0;
        
        
        
            try {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection3 = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                    //jTableOrderDetails.setModel(new DefaultTableModel(null, new String[]{"Order ID","Customer ID","Customer Name","Order Amount","Order Date","Order Done By","Trader ID","Trader Name"}));
                    Statement st3 = connection3.createStatement();                
                    String sql3="";
                    if(jDateFrom.getDate()!=null && jDateTo.getDate()!=null)
                    {
                        Date startdate= jDateFrom.getDate();
                        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
                        String date1 = sd.format(jDateFrom.getDate());
                        System.out.println(date1);
                
                        Date enddate= jDateTo.getDate();
                        SimpleDateFormat ed = new SimpleDateFormat("yyyy-MM-dd");
                        String date2 = sd.format(jDateTo.getDate());
                        System.out.println(date2);
                        System.out.println("1");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate  having OrdersDate >='"+date1+"'";
                        sql3 += " And OrdersDate<= '"+date2+"'";   
                    }
                    else
                    {
                        System.out.println("2");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate";
                    }
                    System.out.println(sql3);
                    ResultSet rs3 = st3.executeQuery(sql3);
                    while(rs3.next()){
                    OrdersDate[countordersdate] = rs3.getString("OrdersDate");
                    countordersdate++;
                    
                    OrdersAmountPerDay[countordersamountperday] = rs3.getString("Per day Sale");
                    countordersamountperday++;
                    }

                    connection3.close();
                }
                catch (Exception e) {
                //e.printStackTrace();
                System.out.println(e.getMessage());
                }
        
                DefaultCategoryDataset chartdata = new DefaultCategoryDataset();
                for(int j=0;j<countordersamountperday;j++)
                {
                    chartdata.setValue(Float.parseFloat(OrdersAmountPerDay[j]), "Total Amount in ", OrdersDate[j]);
                }
                JFreeChart chart = ChartFactory.createBarChart("Sales Per Day", "Days", "Sales Amount(TK)", chartdata, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot chrt = chart.getCategoryPlot();
                chrt.setRangeGridlinePaint(Color.BLACK);

                ChartPanel barPanel = new ChartPanel(chart);
                panelChart.removeAll();
                panelChart.add(barPanel,BorderLayout.CENTER);
                panelChart.validate();
        }
        
        if(settings==1)
        {
            int countordersdate=0;
            int countordersamountperday=0;
            String[] OrdersDate= new String[countordersdate+50];
            String[] OrdersAmountPerDay= new String[countordersamountperday+50];
            float totalordersamountperday=0;
        
        
        
            try {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection3 = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                    //jTableOrderDetails.setModel(new DefaultTableModel(null, new String[]{"Order ID","Customer ID","Customer Name","Order Amount","Order Date","Order Done By","Trader ID","Trader Name"}));
                    Statement st3 = connection3.createStatement();                
                    String sql3="";
                    if(jDateFrom.getDate()!=null && jDateTo.getDate()!=null)
                    {
                        Date startdate= jDateFrom.getDate();
                        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
                        String date1 = sd.format(jDateFrom.getDate());
                        System.out.println(date1);
                
                        Date enddate= jDateTo.getDate();
                        SimpleDateFormat ed = new SimpleDateFormat("yyyy-MM-dd");
                        String date2 = sd.format(jDateTo.getDate());
                        System.out.println(date2);
                        System.out.println("1");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate  having OrdersDate >='"+date1+"'";
                        sql3 += " And OrdersDate<= '"+date2+"'";   
                    }
                    else
                    {
                        System.out.println("2");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate";
                    }
                    System.out.println(sql3);
                    ResultSet rs3 = st3.executeQuery(sql3);
                    while(rs3.next()){
                    OrdersDate[countordersdate] = rs3.getString("OrdersDate");
                    countordersdate++;
                    
                    OrdersAmountPerDay[countordersamountperday] = rs3.getString("Per day Sale");
                    countordersamountperday++;
                    }

                    connection3.close();
                }
                catch (Exception e) {
                //e.printStackTrace();
                System.out.println(e.getMessage());
                }
        
                DefaultCategoryDataset chartdata = new DefaultCategoryDataset();
                for(int j=0;j<countordersamountperday;j++)
                {
                    chartdata.setValue(Float.parseFloat(OrdersAmountPerDay[j]), "Total Amount in ", OrdersDate[j]);
                }
                JFreeChart chart = ChartFactory.createLineChart("Sales Per Day", "Days", "Sales Amount(TK)", chartdata, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot chrt = chart.getCategoryPlot();
                chrt.setRangeGridlinePaint(Color.BLACK);

                ChartPanel barPanel = new ChartPanel(chart);
                panelChart.removeAll();
                panelChart.add(barPanel,BorderLayout.CENTER);
                panelChart.validate();
        }
        
        if(settings==2)
        {
            int countordersdate=0;
            int countordersamountperday=0;
            String[] OrdersDate= new String[countordersdate+50];
            String[] OrdersAmountPerDay= new String[countordersamountperday+50];
            float totalordersamountperday=0;
        
        
        
            try {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection3 = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                    //jTableOrderDetails.setModel(new DefaultTableModel(null, new String[]{"Order ID","Customer ID","Customer Name","Order Amount","Order Date","Order Done By","Trader ID","Trader Name"}));
                    Statement st3 = connection3.createStatement();                
                    String sql3="";
                    if(jDateFrom.getDate()!=null && jDateTo.getDate()!=null)
                    {
                        Date startdate= jDateFrom.getDate();
                        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
                        String date1 = sd.format(jDateFrom.getDate());
                        System.out.println(date1);
                
                        Date enddate= jDateTo.getDate();
                        SimpleDateFormat ed = new SimpleDateFormat("yyyy-MM-dd");
                        String date2 = sd.format(jDateTo.getDate());
                        System.out.println(date2);
                        System.out.println("1");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate  having OrdersDate >='"+date1+"'";
                        sql3 += " And OrdersDate<= '"+date2+"'";   
                    }
                    else
                    {
                        System.out.println("2");
                        sql3 = "select OrdersDate,SUM(OrdersAmount) as \"Per day Sale\" From Orders group by OrdersDate";
                    }
                    System.out.println(sql3);
                    ResultSet rs3 = st3.executeQuery(sql3);
                    while(rs3.next()){
                    OrdersDate[countordersdate] = rs3.getString("OrdersDate");
                    countordersdate++;
                    
                    OrdersAmountPerDay[countordersamountperday] = rs3.getString("Per day Sale");
                    countordersamountperday++;
                    }

                    connection3.close();
                }
                catch (Exception e) {
                //e.printStackTrace();
                System.out.println(e.getMessage());
                }
        
                DefaultCategoryDataset chartdata = new DefaultCategoryDataset();
                for(int j=0;j<countordersamountperday;j++)
                {
                    chartdata.setValue(Float.parseFloat(OrdersAmountPerDay[j]), "Total Amount in ", OrdersDate[j]);
                }
                JFreeChart chart = ChartFactory.createAreaChart("Sales Per Day", "Days", "Sales Amount(TK)", chartdata, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot chrt = chart.getCategoryPlot();
                chrt.setRangeGridlinePaint(Color.BLACK);

                ChartPanel barPanel = new ChartPanel(chart);
                panelChart.removeAll();
                panelChart.add(barPanel,BorderLayout.CENTER);
                panelChart.validate();
        }
    }//GEN-LAST:event_jButtonGenerateChartActionPerformed

    private void jButtonBFFCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFFCMouseClicked
        StoreRecords sr2 = new StoreRecords();
        sr2.setVisible(true);
        sr2.pack();
        sr2.setLocationRelativeTo(null);
        sr2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonBFFCMouseClicked

    private void jButtonBFFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBFFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBFFCActionPerformed

    private void jComboBoxOwnerSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOwnerSettingsActionPerformed
      
    }//GEN-LAST:event_jComboBoxOwnerSettingsActionPerformed

    private void jLabelFCMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFCMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelFCMinMouseClicked

    private void jLabelFCCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFCCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelFCCloseMouseClicked

    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearMouseClicked
        jDateFrom.setDate(null);
        jDateTo.setDate(null);
    }//GEN-LAST:event_jButtonClearMouseClicked

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinanceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinanceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinanceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinanceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinanceChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBFFC;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonGenerateChart;
    private javax.swing.JComboBox<String> jComboBoxOwnerSettings;
    private com.toedter.calendar.JDateChooser jDateFrom;
    private com.toedter.calendar.JDateChooser jDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFCClose;
    private javax.swing.JLabel jLabelFCMin;
    private javax.swing.JLabel jLabelItemID;
    private javax.swing.JLabel jLabelItemID1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panelChart;
    // End of variables declaration//GEN-END:variables
}
