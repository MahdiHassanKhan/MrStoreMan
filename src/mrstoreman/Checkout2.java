/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mahdi
 */
public class Checkout2 extends javax.swing.JFrame {

    /**
     * Creates new form Checkout2
     */
    public Checkout2() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public Checkout2(String itemsid2, String itemsbrand2, String itemsdescription2, String itemssellingprice2, String itemsquantity2, String itemstotalprice2) {
        initComponents();
        this.setLocationRelativeTo(null);
        
        jLabelCheckoutItemID.setText(itemsid2);
        jLabelCheckoutItemBrand.setText(itemsbrand2);
        jLabelCheckoutItemDescription.setText(itemsdescription2);
        jLabelCheckoutItemPrice.setText(itemssellingprice2);
        jLabelCheckoutItemQuantity.setText(itemsquantity2);
        jLabelCheckoutItemTotalPrice.setText(itemstotalprice2);
        jLabelCheckoutItemTotalPriceHide.setText(itemstotalprice2);
        
        jRadioButtonRandom.setSelected(true);
        CustomerIDContact.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonBFOC2 = new javax.swing.JButton();
        jLabelOC2Min = new javax.swing.JLabel();
        jLabelOC2Close = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelCheckoutItemID = new javax.swing.JLabel();
        jLabelCheckoutItemBrand = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelCheckoutItemDescription = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelCheckoutItemPrice = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelCheckoutItemTotalPriceHide = new javax.swing.JLabel();
        jLabelCheckoutItemQuantity = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelCheckoutItemTotalPrice = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jToggleDiscountMode = new javax.swing.JToggleButton();
        OrderDiscount = new javax.swing.JTextField();
        jButtonDiscountConfirm = new javax.swing.JButton();
        jRadioButtonRandom = new javax.swing.JRadioButton();
        jRadioButtonMember = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        CustomerIDContact = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TraderID = new javax.swing.JTextField();
        jButtonConfirmOrder2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        jButtonBFOC2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFOC2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFOC2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFOC2.setText("<-");
        jButtonBFOC2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFOC2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFOC2MouseClicked(evt);
            }
        });
        jButtonBFOC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBFOC2ActionPerformed(evt);
            }
        });

        jLabelOC2Min.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelOC2Min.setForeground(new java.awt.Color(240, 240, 240));
        jLabelOC2Min.setText("-");
        jLabelOC2Min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelOC2Min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelOC2MinMouseClicked(evt);
            }
        });

        jLabelOC2Close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelOC2Close.setForeground(new java.awt.Color(240, 240, 240));
        jLabelOC2Close.setText("X");
        jLabelOC2Close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelOC2Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelOC2CloseMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Order Confirmation2");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("ID:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Brand:");

        jLabelCheckoutItemID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCheckoutItemID.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemID.setText("ID");

        jLabelCheckoutItemBrand.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCheckoutItemBrand.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemBrand.setText("Brand");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Type/Description:");

        jLabelCheckoutItemDescription.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCheckoutItemDescription.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemDescription.setText("Type/Description");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Price:");

        jLabelCheckoutItemPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCheckoutItemPrice.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemPrice.setText("Price");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Quantity:");

        jLabelCheckoutItemTotalPriceHide.setBackground(new java.awt.Color(17, 32, 65));
        jLabelCheckoutItemTotalPriceHide.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelCheckoutItemTotalPriceHide.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemTotalPriceHide.setText("TotalPriceHIDE");

        jLabelCheckoutItemQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCheckoutItemQuantity.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemQuantity.setText("Quantity");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Total Price:");

        jLabelCheckoutItemTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelCheckoutItemTotalPrice.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCheckoutItemTotalPrice.setText("Total Price");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("TK.");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(240, 240, 240));
        jLabel13.setText("Discount:");

        jToggleDiscountMode.setBackground(new java.awt.Color(234, 67, 73));
        jToggleDiscountMode.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jToggleDiscountMode.setForeground(new java.awt.Color(240, 240, 240));
        jToggleDiscountMode.setText("%");
        jToggleDiscountMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleDiscountModeActionPerformed(evt);
            }
        });

        OrderDiscount.setBackground(new java.awt.Color(234, 67, 73));
        OrderDiscount.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        OrderDiscount.setForeground(new java.awt.Color(240, 240, 240));

        jButtonDiscountConfirm.setBackground(new java.awt.Color(243, 67, 73));
        jButtonDiscountConfirm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonDiscountConfirm.setForeground(new java.awt.Color(240, 240, 240));
        jButtonDiscountConfirm.setText("OK");
        jButtonDiscountConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDiscountConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscountConfirmActionPerformed(evt);
            }
        });

        jRadioButtonRandom.setBackground(new java.awt.Color(234, 67, 73));
        jRadioButtonRandom.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRadioButtonRandom.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButtonRandom.setText("Random");
        jRadioButtonRandom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonRandomMouseClicked(evt);
            }
        });
        jRadioButtonRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonRandomActionPerformed(evt);
            }
        });

        jRadioButtonMember.setBackground(new java.awt.Color(234, 67, 73));
        jRadioButtonMember.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRadioButtonMember.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButtonMember.setText("Member");
        jRadioButtonMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButtonMemberMouseClicked(evt);
            }
        });
        jRadioButtonMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMemberActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Customer Info:-");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(240, 240, 240));
        jLabel14.setText("Customer Type:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(240, 240, 240));
        jLabel15.setText("Customer ID/Contact:");

        CustomerIDContact.setBackground(new java.awt.Color(234, 67, 73));
        CustomerIDContact.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        CustomerIDContact.setForeground(new java.awt.Color(240, 240, 240));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(240, 240, 240));
        jLabel16.setText("Trader Info:-");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(240, 240, 240));
        jLabel19.setText("Trader ID:");

        TraderID.setBackground(new java.awt.Color(234, 67, 73));
        TraderID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TraderID.setForeground(new java.awt.Color(240, 240, 240));

        jButtonConfirmOrder2.setBackground(new java.awt.Color(243, 67, 73));
        jButtonConfirmOrder2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonConfirmOrder2.setForeground(new java.awt.Color(240, 240, 240));
        jButtonConfirmOrder2.setText("Confirm Order");
        jButtonConfirmOrder2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonConfirmOrder2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmOrder2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCheckoutItemPrice)
                            .addComponent(jLabelCheckoutItemQuantity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelOC2Min)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelOC2Close)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OrderDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleDiscountMode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDiscountConfirm)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(TraderID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(170, 170, 170)
                                                        .addComponent(jRadioButtonRandom)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jRadioButtonMember))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                        .addGap(156, 156, 156)
                                                        .addComponent(CustomerIDContact, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabelCheckoutItemTotalPriceHide, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelCheckoutItemID)
                                            .addComponent(jLabelCheckoutItemDescription)
                                            .addComponent(jLabelCheckoutItemBrand)))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButtonBFOC2)
                                        .addGap(432, 432, 432)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelCheckoutItemTotalPrice)))
                                .addGap(97, 97, 97)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonConfirmOrder2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel15))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(70, 70, 70))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelOC2Close)
                            .addComponent(jLabelOC2Min)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonBFOC2)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelCheckoutItemID))
                .addGap(3, 3, 3)
                .addComponent(jLabel16)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelCheckoutItemBrand)
                    .addComponent(jLabel19)
                    .addComponent(TraderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabelCheckoutItemDescription))
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(53, 53, 53)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelCheckoutItemPrice)
                    .addComponent(jLabel14)
                    .addComponent(jRadioButtonRandom)
                    .addComponent(jRadioButtonMember))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabelCheckoutItemQuantity)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(CustomerIDContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OrderDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleDiscountMode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDiscountConfirm)
                    .addComponent(jLabelCheckoutItemTotalPriceHide, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabelCheckoutItemTotalPrice)
                    .addComponent(jButtonConfirmOrder2))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBFOC2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFOC2MouseClicked
        ViewEditCart2 vec2 = new ViewEditCart2();
        vec2.setVisible(true);
        vec2.pack();
        vec2.setLocationRelativeTo(null);
        vec2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonBFOC2MouseClicked

    private void jButtonBFOC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBFOC2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBFOC2ActionPerformed

    private void jLabelOC2MinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOC2MinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelOC2MinMouseClicked

    private void jLabelOC2CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOC2CloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelOC2CloseMouseClicked

    private void jToggleDiscountModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleDiscountModeActionPerformed
        if(jToggleDiscountMode.isSelected())
        {
            jToggleDiscountMode.setText("TK");
        }
        else
        {
            jToggleDiscountMode.setText("%");
        }
    }//GEN-LAST:event_jToggleDiscountModeActionPerformed

    private void jButtonDiscountConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscountConfirmActionPerformed
        if(jToggleDiscountMode.isSelected())
        {
            float main1 = Float.parseFloat(jLabelCheckoutItemTotalPriceHide.getText());
            Float main2 = new Float(main1);

            float x = main2; //////////////////////////////Total Amount////////////////////////////

            String od = OrderDiscount.getText();
            float main3 = Float.parseFloat(od);
            Float main4 = new Float(main3);

            float y = main4;////////////////////////////////Discount///////////////////////////

            if(x>=y)
            {
                x=x-y;
                jLabelCheckoutItemTotalPrice.setText(String.valueOf(x));
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Unusual Discount Value!!!");
            }
        }
        else
        {
            float main1 = Float.parseFloat(jLabelCheckoutItemTotalPriceHide.getText());
            Float main2 = new Float(main1);

            float x = main2; //////////////////////////////Total Amount////////////////////////////

            String od = OrderDiscount.getText();
            float main3 = Float.parseFloat(od);
            Float main4 = new Float(main3);

            float y = main4;////////////////////////////////Discount///////////////////////////

            if(y<=100 && y>=0)
            {
                x=(x-x*(y/100));
                jLabelCheckoutItemTotalPrice.setText(String.valueOf(x));
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Unusual Discount Value!!!");
            }
        }
    }//GEN-LAST:event_jButtonDiscountConfirmActionPerformed

    private void jRadioButtonRandomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonRandomMouseClicked
        jRadioButtonRandom.setSelected(true);
        jRadioButtonMember.setSelected(false);
        CustomerIDContact.setEditable(false);
    }//GEN-LAST:event_jRadioButtonRandomMouseClicked

    private void jRadioButtonRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonRandomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonRandomActionPerformed

    private void jRadioButtonMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonMemberMouseClicked
        jRadioButtonMember.setSelected(true);
        jRadioButtonRandom.setSelected(false);
        CustomerIDContact.setEditable(true);
    }//GEN-LAST:event_jRadioButtonMemberMouseClicked

    private void jRadioButtonMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMemberActionPerformed

    private void jButtonConfirmOrder2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmOrder2ActionPerformed

        if(jRadioButtonMember.isSelected())
        {
            System.out.println("member");
            String EmpId="";
            String EmpName="";
            String CustomerId="";
            String CustomerName="";
            int traderwronginfo=0;
            int customerwronginfo=0;
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connectionLogin = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                Statement stLogin = connectionLogin.createStatement();

                String sqlLogin = "select * from Employee where EmployeeId = ?";
                PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
                pstLogin.setString(1, TraderID.getText());
                ResultSet rsLogin = pstLogin.executeQuery();

                if(rsLogin.next())
                {
                    EmpId = String.valueOf(rsLogin.getInt("EmployeeId"));
                    EmpName = rsLogin.getString("EmployeeName");
                }
                /*else if(rsLogin2.next())
                {
                    //JOptionPane.showMessageDialog(null,"matched");
                    EmployeeInterface ei = new EmployeeInterface();
                    ei.setVisible(true);
                    ei.pack();
                    ei.setLocationRelativeTo(null);
                    ei.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose();
                }*/
                else
                {
                    traderwronginfo=1;
                    //JOptionPane.showMessageDialog(null,"Trader ID didn't match with any owner.");
                    //TraderID.setText("");
                }
                //}

            //connectionLogin.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,"Trader ID didn't match with any Employee.");
            TraderID.setText("");
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connectionLogin = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement stLogin = connectionLogin.createStatement();

            String sqlLogin = "select * from Customer where CustomerId = ? or CustomerContact = ?";
            PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
            pstLogin.setString(1, CustomerIDContact.getText());
            pstLogin.setString(2, CustomerIDContact.getText());
            ResultSet rsLogin = pstLogin.executeQuery();

            if(rsLogin.next())
            {
                CustomerId = String.valueOf(rsLogin.getInt("CustomerId"));
                CustomerName = rsLogin.getString("CustomerName");
            }
            /*else if(rsLogin2.next())
            {
                //JOptionPane.showMessageDialog(null,"matched");
                EmployeeInterface ei = new EmployeeInterface();
                ei.setVisible(true);
                ei.pack();
                ei.setLocationRelativeTo(null);
                ei.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                this.dispose();
            }*/
            else
            {
                customerwronginfo=1;
                //JOptionPane.showMessageDialog(null,"Customer Info didn't match with any member.");
                //CustomerIDContact.setText("");
            }
            //}

        //connectionLogin.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,"Customer Info didn't match with any member.");
            CustomerIDContact.setText("");
        }

        if(traderwronginfo==0 && customerwronginfo==0)
        {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                //Statement stLogin = connectionLogin.createStatement();
                //String sqlLogin = "select * from Owner where OwnerEmail = ? and OwnerPassword = ?";
                //PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
                Date date = new Date();
                java.sql.Date ordersdate = new java.sql.Date(date.getTime());
                String sqlInsert = "insert into Orders"
                +"(CustomerId,CustomerName,OrdersAmount,OrdersDate,OrderDoneBy,TraderId,TraderName)"
                +"values(?,?,?,?,?,?,?)";
                sqlInsert += "DELETE From SoldItems";

                PreparedStatement pst = con.prepareStatement(sqlInsert);
                pst.setString(1, CustomerId);
                pst.setString(2, CustomerName);
                pst.setString(3, jLabelCheckoutItemTotalPrice.getText());
                pst.setDate(4, ordersdate);
                pst.setString(5, "Employee");
                pst.setString(6, EmpId);
                pst.setString(7, EmpName);

                System.out.println(EmpId);
                System.out.println(EmpName);
                System.out.println(CustomerId);
                System.out.println(CustomerName);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Order Completed.");
                printRecord(jPanel1);

                //connectionLogin.close();
                SellItems2 si32 = new SellItems2();
                si32.setVisible(true);
                si32.pack();
                si32.setLocationRelativeTo(null);
                si32.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                this.dispose();

            }
            catch (Exception e) {
                //e.printStackTrace();
                //System.out.println(e.getMessage());
                //JOptionPane.showMessageDialog(null,e);
                //JOptionPane.showMessageDialog(this,e.getMessage());
                JOptionPane.showMessageDialog(this,"Order incomplete due to some wrong info");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Order incomplete due to some wrong info");
        }

        }

        else if(jRadioButtonRandom.isSelected())
        {
            System.out.println("random");
            String EmpId="";
            String EmpName="";
            String CustomerId="";
            String CustomerName="";
            int traderwronginfo=0;
            int customerwronginfo=0;
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connectionLogin = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                Statement stLogin = connectionLogin.createStatement();

                String sqlLogin = "select * from Employee where EmployeeId = ?";
                PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
                pstLogin.setString(1, TraderID.getText());
                ResultSet rsLogin = pstLogin.executeQuery();

                if(rsLogin.next())
                {
                    EmpId = String.valueOf(rsLogin.getInt("EmployeeId"));
                    EmpName = rsLogin.getString("EmployeeName");
                }
                /*else if(rsLogin2.next())
                {
                    //JOptionPane.showMessageDialog(null,"matched");
                    EmployeeInterface ei = new EmployeeInterface();
                    ei.setVisible(true);
                    ei.pack();
                    ei.setLocationRelativeTo(null);
                    ei.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose();
                }*/
                else
                {
                    traderwronginfo=1;
                    //JOptionPane.showMessageDialog(null,"Trader ID didn't match with any owner.");
                    //TraderID.setText("");
                }
                //}

            //connectionLogin.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,"Trader ID didn't match with any owner.");
            TraderID.setText("");
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connectionLogin = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement stLogin = connectionLogin.createStatement();

            String sqlLogin = "select * from Customer where CustomerId = 7";
            PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
            ResultSet rsLogin = pstLogin.executeQuery();

            if(rsLogin.next())
            {
                CustomerId = String.valueOf(rsLogin.getInt("CustomerId"));
                CustomerName = rsLogin.getString("CustomerName");
            }
            /*else if(rsLogin2.next())
            {
                //JOptionPane.showMessageDialog(null,"matched");
                EmployeeInterface ei = new EmployeeInterface();
                ei.setVisible(true);
                ei.pack();
                ei.setLocationRelativeTo(null);
                ei.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                this.dispose();
            }*/
            else
            {
                customerwronginfo=1;
                //JOptionPane.showMessageDialog(null,"Customer Info didn't match with any member.");
                //CustomerIDContact.setText("");
            }
            //}

        //connectionLogin.close();

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null,"Customer Info didn't match with any member.");
            CustomerIDContact.setText("");
        }

        if(traderwronginfo==0 && customerwronginfo==0)
        {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                //Statement stLogin = connectionLogin.createStatement();
                //String sqlLogin = "select * from Owner where OwnerEmail = ? and OwnerPassword = ?";
                //PreparedStatement pstLogin = connectionLogin.prepareStatement(sqlLogin);
                Date date = new Date();
                java.sql.Date ordersdate = new java.sql.Date(date.getTime());
                String sqlInsert = "insert into Orders"
                +"(CustomerId,CustomerName,OrdersAmount,OrdersDate,OrderDoneBy,TraderId,TraderName)"
                +"values(?,?,?,?,?,?,?)";
                sqlInsert += "DELETE From SoldItems";

                PreparedStatement pst = con.prepareStatement(sqlInsert);
                pst.setString(1, CustomerId);
                pst.setString(2, CustomerName);
                pst.setString(3, jLabelCheckoutItemTotalPrice.getText());
                pst.setDate(4, ordersdate);
                pst.setString(5, "Employee");
                pst.setString(6, EmpId);
                pst.setString(7, EmpName);

                System.out.println(EmpId);
                System.out.println(EmpName);
                System.out.println(CustomerId);
                System.out.println(CustomerName);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Order Completed.");
                printRecord(jPanel1);

                SellItems2 si32 = new SellItems2();
                si32.setVisible(true);
                si32.pack();
                si32.setLocationRelativeTo(null);
                si32.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                this.dispose();
                //connectionLogin.close();

            }
            catch (Exception e) {
                //e.printStackTrace();
                //System.out.println(e.getMessage());
                //JOptionPane.showMessageDialog(null,e);
                //JOptionPane.showMessageDialog(this,e.getMessage());
                JOptionPane.showMessageDialog(this,"Order incomplete due to some wrong info");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Order incomplete due to some wrong info");
        }
        }
    }//GEN-LAST:event_jButtonConfirmOrder2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkout2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustomerIDContact;
    private javax.swing.JTextField OrderDiscount;
    private javax.swing.JTextField TraderID;
    private javax.swing.JButton jButtonBFOC2;
    private javax.swing.JButton jButtonConfirmOrder2;
    private javax.swing.JButton jButtonDiscountConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCheckoutItemBrand;
    private javax.swing.JLabel jLabelCheckoutItemDescription;
    private javax.swing.JLabel jLabelCheckoutItemID;
    private javax.swing.JLabel jLabelCheckoutItemPrice;
    private javax.swing.JLabel jLabelCheckoutItemQuantity;
    private javax.swing.JLabel jLabelCheckoutItemTotalPrice;
    private javax.swing.JLabel jLabelCheckoutItemTotalPriceHide;
    private javax.swing.JLabel jLabelOC2Close;
    private javax.swing.JLabel jLabelOC2Min;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonMember;
    private javax.swing.JRadioButton jRadioButtonRandom;
    private javax.swing.JToggleButton jToggleDiscountMode;
    // End of variables declaration//GEN-END:variables

////////////////////////////////////////////////////////////////////
    private void printRecord(JPanel panel){
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setJobName("Print Record");
        pj.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                if(pageIndex>0)
                {
                    return Printable.NO_SUCH_PAGE;
                }
                
                Graphics2D graphics2D = (Graphics2D)graphics;
                graphics2D.translate(pageFormat.getImageableX()*2,pageFormat.getImageableY()*2);
                graphics2D.scale(0.53, 0.5);
                panel.paint(graphics2D);
                
                return Printable.PAGE_EXISTS;
            }
        });
        
        boolean returningResult = pj.printDialog();
        if(returningResult)
        {
            try{
                pj.print();
            }
            catch(PrinterException printerException){
                JOptionPane.showMessageDialog(this, "Print Error " + printerException.getMessage());
            }
        }
        
    }


}
