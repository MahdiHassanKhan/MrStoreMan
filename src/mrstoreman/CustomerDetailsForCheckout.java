/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mrstoreman;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahdi
 */
public class CustomerDetailsForCheckout extends javax.swing.JFrame {

    /**
     * Creates new form CustomerDetailsForCheckout
     */
    
    static String customerid;
    static String customername;
    static String customercontact;
    static String customeremail;
    static String customerlocation;
    
    public CustomerDetailsForCheckout() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCustomerDetailsCheckout = new javax.swing.JTable();
        jButtonFetchinCDCheckout = new javax.swing.JButton();
        jButtonBFCDCheckout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelCDCheckoutMin = new javax.swing.JLabel();
        jLabelCDCheckoutClose = new javax.swing.JLabel();
        CustomerDetailsCheckoutSearchField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(17, 32, 65));

        jTableCustomerDetailsCheckout = new JTable()
        {
            public boolean isCellEditable(int row, int column)
            {
                for(int i=0 ; i<jTableCustomerDetailsCheckout.getRowCount() ;i++)
                {
                    if(row == i)
                    {
                        return false;
                    }
                }
                return true;
            }
        };
        jTableCustomerDetailsCheckout.setBackground(new java.awt.Color(243, 67, 73));
        jTableCustomerDetailsCheckout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTableCustomerDetailsCheckout.setForeground(new java.awt.Color(240, 240, 240));
        jTableCustomerDetailsCheckout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Email", "Password", "Location"
            }
        ));
        jTableCustomerDetailsCheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCustomerDetailsCheckoutMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCustomerDetailsCheckout);

        jButtonFetchinCDCheckout.setBackground(new java.awt.Color(243, 67, 73));
        jButtonFetchinCDCheckout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonFetchinCDCheckout.setForeground(new java.awt.Color(240, 240, 240));
        jButtonFetchinCDCheckout.setText("Fetch");
        jButtonFetchinCDCheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFetchinCDCheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFetchinCDCheckoutMouseClicked(evt);
            }
        });
        jButtonFetchinCDCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchinCDCheckoutActionPerformed(evt);
            }
        });

        jButtonBFCDCheckout.setBackground(new java.awt.Color(243, 67, 73));
        jButtonBFCDCheckout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonBFCDCheckout.setForeground(new java.awt.Color(240, 240, 240));
        jButtonBFCDCheckout.setText("<-");
        jButtonBFCDCheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBFCDCheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBFCDCheckoutMouseClicked(evt);
            }
        });
        jButtonBFCDCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBFCDCheckoutActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Customer Data");

        jLabelCDCheckoutMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelCDCheckoutMin.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCDCheckoutMin.setText("-");
        jLabelCDCheckoutMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCDCheckoutMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCDCheckoutMinMouseClicked(evt);
            }
        });

        jLabelCDCheckoutClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelCDCheckoutClose.setForeground(new java.awt.Color(240, 240, 240));
        jLabelCDCheckoutClose.setText("X");
        jLabelCDCheckoutClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCDCheckoutClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCDCheckoutCloseMouseClicked(evt);
            }
        });

        CustomerDetailsCheckoutSearchField.setBackground(new java.awt.Color(234, 67, 73));
        CustomerDetailsCheckoutSearchField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        CustomerDetailsCheckoutSearchField.setForeground(new java.awt.Color(240, 240, 240));
        CustomerDetailsCheckoutSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerDetailsCheckoutSearchFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonBFCDCheckout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(262, 262, 262)
                        .addComponent(jLabelCDCheckoutMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelCDCheckoutClose)
                        .addGap(6, 6, 6)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CustomerDetailsCheckoutSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButtonFetchinCDCheckout)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelCDCheckoutClose)
                    .addComponent(jLabelCDCheckoutMin)
                    .addComponent(jButtonBFCDCheckout))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonFetchinCDCheckout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CustomerDetailsCheckoutSearchField))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableCustomerDetailsCheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCustomerDetailsCheckoutMouseClicked
        int row = jTableCustomerDetailsCheckout.getSelectedRow();
        String selection = jTableCustomerDetailsCheckout.getModel().getValueAt(row,0).toString();
        //String sql = "select * from Employee where EmployeeId = " + selection;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection3 = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
            Statement st3 = connection3.createStatement();
            String sql3 = "select * from Customer where CustomerId = " + selection;
            ResultSet rs3 = st3.executeQuery(sql3);
            if(rs3.next()){
                customerid = rs3.getString("CustomerId");
                customername = rs3.getString("CustomerName");
                customercontact = rs3.getString("CustomerContact");
                customeremail = rs3.getString("CustomerEmail");
                customerlocation = rs3.getString("CustomerLocation");
                //ItemPRTo.setText(rs3.getString("ItemPurchasePrice"));
                //ItemPRFrom.setText(rs3.getString("ItemSellingPrice"));

                //Date manufacturedatecheck = ItemManufactureDate.getDate();
                //SimpleDateFormat mdf = new SimpleDateFormat("yyyy-MM-dd");
                //String manufacturedate = mdf.format(ItemManufactureDate.getDate());
                //pst.setString(5, manufacturedate);
                //ItemManufactureDate.setDate(rs3.getDate("ItemManufactureDate"));
                //ItemExpirationDate.setDate(rs3.getDate("ItemExpirationDate"));

                //ItemWeight.setText(rs3.getString("ItemWeight"));
                //ItemQuantity.setText(rs3.getString("ItemQuantity"));
            }

        }
        catch (Exception e) {
            //e.printStackTrace();
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this,"Didn't choose any customer");
        }

        if(evt.getClickCount()==2)
        {
           // new Checkout(customerid,customername,customercontact,customeremail,customerlocation).setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_jTableCustomerDetailsCheckoutMouseClicked

    private void jButtonFetchinCDCheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFetchinCDCheckoutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonFetchinCDCheckoutMouseClicked

    private void jButtonFetchinCDCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFetchinCDCheckoutActionPerformed
        if(CustomerDetailsCheckoutSearchField.getText().length()==0)
        {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection3 = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                jTableCustomerDetailsCheckout.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Password","Location"}));
                Statement st3 = connection3.createStatement();
                String sql3 = "select * from Customer";
                ResultSet rs3 = st3.executeQuery(sql3);
                while(rs3.next()){
                    String CustomerId = String.valueOf(rs3.getInt("CustomerId"));
                    String CustomerName = rs3.getString("CustomerName");
                    String CustomerContact = rs3.getString("CustomerContact");
                    String CustomerEmail = rs3.getString("CustomerEmail");
                    String CustomerPassword = rs3.getString("CustomerPassword");
                    String CustomerLocation = rs3.getString("CustomerLocation");

                    String CustomerData[] = {CustomerId,CustomerName,CustomerContact,CustomerEmail,CustomerPassword,CustomerLocation};
                    DefaultTableModel CTM = (DefaultTableModel)jTableCustomerDetailsCheckout.getModel();
                    CTM.addRow(CustomerData);
                }

                connection3.close();
            }
            catch (Exception e) {
                //e.printStackTrace();
                System.out.println(e.getMessage());
            }
        }

        else
        {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection3 = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=MrStoreMan;selectMethod=cursor", "sa", "123456");
                jTableCustomerDetailsCheckout.setModel(new DefaultTableModel(null, new String[]{"ID","Name","Contact","Email","Password","Location"}));
                Statement st3 = connection3.createStatement();
                String sql3 = "select * from Customer WHERE CustomerId LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                sql3 += "UNION select * from Customer WHERE CustomerName LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                sql3 += "UNION select * from Customer WHERE CustomerContact LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                sql3 += "UNION select * from Customer WHERE CustomerEmail LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                sql3 += "UNION select * from Customer WHERE CustomerPassword LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                sql3 += "UNION select * from Customer WHERE CustomerLocation LIKE '%"+CustomerDetailsCheckoutSearchField.getText()+"%'";
                ResultSet rs3 = st3.executeQuery(sql3);
                while(rs3.next()){
                    String CustomerId = String.valueOf(rs3.getInt("CustomerId"));
                    String CustomerName = rs3.getString("CustomerName");
                    String CustomerContact = rs3.getString("CustomerContact");
                    String CustomerEmail = rs3.getString("CustomerEmail");
                    String CustomerPassword = rs3.getString("CustomerPassword");
                    String CustomerLocation = rs3.getString("CustomerLocation");

                    String CustomerData[] = {CustomerId,CustomerName,CustomerContact,CustomerEmail,CustomerPassword,CustomerLocation};
                    DefaultTableModel CTM = (DefaultTableModel)jTableCustomerDetailsCheckout.getModel();
                    CTM.addRow(CustomerData);
                }

                connection3.close();

            }
            catch (Exception e) {
                //e.printStackTrace();
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonFetchinCDCheckoutActionPerformed

    private void jButtonBFCDCheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBFCDCheckoutMouseClicked
        /* OwnerInterface oi3 = new OwnerInterface();
        oi3.setVisible(true);
        oi3.pack();
        oi3.setLocationRelativeTo(null);
        oi3.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();*/
        /*******************/ //new OwnerInterface(username).setVisible(true); /*******************/
        //oiStart.setVisible(true);
        //oiStart.pack();
        //oiStart.setLocationRelativeTo(null);
        //oiStart.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //this.dispose();
        //Checkout c3 = new Checkout();
        //c3.setVisible(true);
        //c3.pack();
        //c3.setLocationRelativeTo(null);
        //c3.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //this.dispose();
    }//GEN-LAST:event_jButtonBFCDCheckoutMouseClicked

    private void jButtonBFCDCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBFCDCheckoutActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButtonBFCDCheckoutActionPerformed

    private void jLabelCDCheckoutMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCDCheckoutMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelCDCheckoutMinMouseClicked

    private void jLabelCDCheckoutCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCDCheckoutCloseMouseClicked
        //System.exit(0);
        this.dispose();
    }//GEN-LAST:event_jLabelCDCheckoutCloseMouseClicked

    private void CustomerDetailsCheckoutSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerDetailsCheckoutSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerDetailsCheckoutSearchFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerDetailsForCheckout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustomerDetailsCheckoutSearchField;
    private javax.swing.JButton jButtonBFCDCheckout;
    private javax.swing.JButton jButtonFetchinCDCheckout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCDCheckoutClose;
    private javax.swing.JLabel jLabelCDCheckoutMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCustomerDetailsCheckout;
    // End of variables declaration//GEN-END:variables
}
